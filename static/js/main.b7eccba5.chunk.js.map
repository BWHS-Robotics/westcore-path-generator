{"version":3,"sources":["models/shaders.js","models/materials.js","stores/NodeStore.jsx","stores/ModelStore.jsx","stores/UILevaStore.jsx","models/FieldModel.js","controls/EventsControls.js","ui/Node.jsx","lib/CubicHermiteSpline.js","ui/NodeConnection.jsx","ui/UIManager.jsx","ui/UI.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["gridTileVertex","String","raw","gridTileFragment","redMat","THREE","color","metalness","roughness","blueMat","lightGrayMat","tileMat","grayMat","yellowMat","purpleMat","platformMat","transparent","opacity","wireframe","side","transparentMat","vertexColors","shadowMat","tileGridMat","uniforms","resolution","value","fragmentShader","S","vertexShader","useNodeStore","create","set","nodes","setNodeState","fn","produce","addNode","node","state","useModelStore","model","setModel","useUiLevaStore","currentNodeStore","markerMode","hideFieldElements","showRobotVisualization","toggleMarkerMode","toggleRobotVisualization","toggleFieldElements","setStore","store","FieldModel","props","tileMesh","useRef","rings","hideTiles","group","useGLTF","process","Perimeter_Lexan_Wall_Panel000","Perimeter_Lexan_Wall_Panel001","Perimeter_Lexan_Wall_Panel002","Perimeter_Lexan_Wall_Panel003","Perimeter_Lexan_Wall_Panel004","Perimeter_Lexan_Wall_Panel005","Perimeter_Lexan_Wall_Panel006","Perimeter_Lexan_Wall_Panel007","Perimeter_Lexan_Wall_Panel008","Perimeter_Lexan_Wall_Panel009","Perimeter_Lexan_Wall_Panel010","Perimeter_Lexan_Wall_Panel011","forEach","tile","material","useEffect","ref","dispose","position","rotation","Math","PI","castShadow","receiveShadow","geometry","RedPlatform159","RedPlatform159_1","RedPlatform159_2","RedPlatform159_3","RedPlatform159_4","RedPlatform159_5","RedPlatform159_6","RedPlatform159_7","RedPlatform159_8","RedPlatform159_9","RedPlatform159_10","RedPlatform159_11","RedPlatform159_12","Platform_Pivot_Bar001","RedPlatform161","RedPlatform161_1","RedPlatform161_2","RedPlatform161_3","RedPlatform161_4","RedPlatform161_5","RedPlatform161_6","RedPlatform161_7","RedPlatform161_8","RedPlatform161_9","RedPlatform161_10","RedPlatform161_11","RedPlatform161_12","RedPlatform161_13","RedPlatform161_14","RedPlatform161_15","RedPlatform161_16","RedPlatform","RedPlatform_1","RedPlatform_2","RedPlatform_3","RedPlatform_4","RedPlatform_5","RedPlatform_6","RedPlatform_7","RedPlatform_8","RedPlatform_9","RedPlatform_10","RedPlatform_11","RedPlatform_12","Platform_Pivot_Bar","RedPlatform125","RedPlatform125_1","RedPlatform125_2","RedPlatform125_3","RedPlatform125_4","RedPlatform125_5","RedPlatform125_6","RedPlatform125_7","RedPlatform125_8","RedPlatform125_9","RedPlatform125_10","RedPlatform125_11","RedPlatform125_12","RedPlatform125_13","RedPlatform125_14","RedPlatform125_15","RedPlatform125_16","Field_Tape_Blue","Field_Tape_Red","onClick","clicked","stopPropagation","name","point","attach","args","TiP_Lines_1","TiP_Lines_2","scale","Tipping_Point_Game_Element","Tipping_Point_Game_Elements319","Tipping_Point_Game_Elements321","Tipping_Point_Game_Elements323","Tipping_Point_Game_Elements325","Tipping_Point_Game_Elements327","Tipping_Point_Game_Elements329","Tipping_Point_Game_Elements331","Tipping_Point_Game_Elements333","Tipping_Point_Game_Elements335","Tipping_Point_Game_Elements337","Tipping_Point_Game_Elements339","Tipping_Point_Game_Elements341","Tipping_Point_Game_Elements343","Tipping_Point_Game_Elements345","Tipping_Point_Game_Elements347","Tipping_Point_Game_Elements349","Tipping_Point_Game_Elements351","Tipping_Point_Game_Elements353","Tipping_Point_Game_Elements355","Tipping_Point_Game_Elements357","Tipping_Point_Game_Elements359","Tipping_Point_Game_Elements361","Tipping_Point_Game_Elements363","Tipping_Point_Game_Elements365","Tipping_Point_Game_Elements367","Tipping_Point_Game_Elements369","Tipping_Point_Game_Elements371","Tipping_Point_Game_Elements373","Tipping_Point_Game_Elements375","Tipping_Point_Game_Elements377","Tipping_Point_Game_Elements379","Tipping_Point_Game_Elements381","Tipping_Point_Game_Elements383","Tipping_Point_Game_Elements385","Tipping_Point_Game_Elements387","Tipping_Point_Game_Elements389","Tipping_Point_Game_Elements391","Tipping_Point_Game_Elements393","Tipping_Point_Game_Elements395","Tipping_Point_Game_Elements397","Tipping_Point_Game_Elements399","TiP_Inches1274","TiP_Inches1274_1","TiP_Inches1274_2","TiP_Inches1274_3","TiP_Inches1274_4","TiP_Inches1274_5","TiP_Inches1274_6","TiP_Inches1274_7","TiP_Inches1274_8","TiP_Inches1275","TiP_Inches1275_1","TiP_Inches1275_2","TiP_Inches1275_3","TiP_Inches1275_4","TiP_Inches1275_5","TiP_Inches1275_6","TiP_Inches1275_7","TiP_Inches1275_8","TiP_Inches1273","TiP_Inches1273_1","TiP_Inches1273_2","TiP_Inches1273_3","TiP_Inches1273_4","TiP_Inches1273_5","TiP_Inches1273_6","TiP_Inches1273_7","TiP_Inches1273_8","TiP_Inches1273_9","TiP_Inches1273_10","TiP_Inches1273_11","TiP_Inches1098","TiP_Inches1098_1","TiP_Inches1098_2","TiP_Inches1098_3","TiP_Inches1098_4","TiP_Inches1098_5","TiP_Inches1098_6","TiP_Inches1098_7","TiP_Inches1098_8","TiP_Inches1098_9","TiP_Inches1098_10","TiP_Inches1098_11","TiP_Inches1238","TiP_Inches1238_1","TiP_Inches1238_2","TiP_Inches1238_3","TiP_Inches1238_4","TiP_Inches1238_5","TiP_Inches1238_6","TiP_Inches1238_7","TiP_Inches1238_8","TiP_Inches1238_9","TiP_Inches1238_10","TiP_Inches1238_11","TiP_Inches1194","TiP_Inches1194_1","TiP_Inches1194_2","TiP_Inches1194_3","TiP_Inches1194_4","TiP_Inches1194_5","TiP_Inches1194_6","TiP_Inches1194_7","TiP_Inches1194_8","TiP_Inches1162","TiP_Inches1162_1","TiP_Inches1162_2","TiP_Inches1162_3","TiP_Inches1162_4","TiP_Inches1162_5","TiP_Inches1162_6","TiP_Inches1162_7","TiP_Inches1162_8","preload","userDataParent","EventsControls","camera","domElement","_this","this","container","undefined","document","containerWidth","width","containerHeight","height","_DisplaceFocused","focused","focusedChild","previous","_DisplacemouseOvered","mouseOvered","mouseOveredChild","raycaster","map","event","offset","offsetUse","_altUsed","_mouse","mouse","_vector","_direction","collidableEntities","enabled","objects","_DisplaceIntersects","_DisplaceIntersectsMap","intersects","intersectsMap","update","onContainerMouseMove","_mouseMoveFlag","mouseMove","dragAndDrop","mouseOver","mouseOut","mouseUp","onclick","object","push","i","children","length","detach","item","indexOf","splice","_mouseOverFlag","_dragAndDropFlag","_onclickFlag","_raySet","intersectObject","pos","copy","sub","err","intersectObjects","select","deselect","attachEvent","handler","detachEvent","setFocus","removeFocus","returnPrevious","x","y","unproject","transformDirection","matrixWorld","vector","normalize","_setMap","addEventListener","altKey","subVectors","passive","capture","offsetX","layerX","offsetY","layerY","changedTouches","getTouchPos2","Node","dragging","index","selected","setSelect","setDragging","useCreateStore","useThree","gl","mesh","React","useState","hovered","setHover","billboard","useControls","getMeshPos","currentPos","current","z","eventControls","altUsed","round","Billboard","meshPos","getBillboardPos","follow","Text","fontSize","maxWidth","lineHeight","outlineBlur","outlineColor","textAlign","anchorX","anchorY","_event","CubicHermiteSpline","points","tangents","count","interpolatedPoints","increment","getPointAtTime","t","p0","p1","v0","v1","t2","t3","_2t3","_3t2","a","b","c","d","NodeConnection","startMarker","endMarker","robotVisualization","startPos","endPos","vectors","setVectors","v0Mesh","v1Mesh","vectorRef","divideScalar","add","velocityScalarFunc","val","curve","M","getPoints","setFromPoints","v","v0Geometry","v1Geometry","slice","filter","_element","atan2","depthWrite","depthTest","UIManager","setMarkerMode","setUiStore","shallow","button","selection","setSelection","OrbitControls","Stats","UI","importButton","waypointButton","buttonSelected","setButtonSelected","importString","hideGameElements","onChange","style","right","top","className","parsedNodes","JSON","parse","importProject","backgroundColor","console","log","stringify","fill","flat","titleBar","intersectionsFilter","intersections","App","sphereGeometry","backgroundTexture","load","sphereMaterial","shadows","antialias","fov","intensity","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b7eccba5.chunk.js","sourcesContent":["// Vertex shader for the field visualization when snapping waypoints to the grid\nexport const gridTileVertex = String.raw`\nattribute vec3 in_Position;\nvarying vec2 fragCoord;\nvarying vec2 vUv; \nvoid main()\n{\n    vUv = uv;\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n    fragCoord = position.xy;\n}`;\n\n// Fragment shader for the field visualization when snapping waypoints to the grid\nexport const gridTileFragment = String.raw`\nprecision highp float;\nprecision highp int;\nuniform float resolution;\nvarying vec2 vUv;\nfloat smoothgrid(float spacing, float thickness, float alpha, vec2 position)\n{\n  vec2 posrep = mod(position, vec2(spacing)) - .5 * thickness;\n  vec2 lines = alpha * max(vec2(0.0), min(thickness + posrep, thickness - posrep) / thickness);\n  return max(lines.x, lines.y);\n}\nvoid main()\n{\n  vec2 uv = (vUv.xy) / resolution;\n  vec3 blue = vec3(0.34, 0.34, 0.34);\n  vec2 spacing = vec2(.496, 0.248);\n  vec2 thickness = vec2(0.01, 0.015);\n  vec2 alpha = vec2(0.9, 0.5);\n  float thick_lines = smoothgrid(spacing.s, thickness.s, alpha.s, uv);\n  float thin_lines = smoothgrid(spacing.t, thickness.t, alpha.t, uv);\n  float erasure = 0.1;\n  vec4 background = vec4(0);\n  vec3 paper = max(blue, 0.35 * length(background.rgb));\n  vec3 color = vec3(max(paper, sqrt(erasure * background.b + (1. - erasure)) * max(thick_lines, thin_lines)));\n  gl_FragColor = vec4(color, 1.0);\n}    \n`;","import * as THREE from 'three'\n\nimport * as S from './shaders'\n\nexport const redMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(0,87%,46%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const blueMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(240,87%,46%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const lightGrayMat = new THREE.MeshStandardMaterial({\n    color: \"#9f9b92\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const tileMat = new THREE.MeshStandardMaterial({\n    color: \"#909090\",\n    metalness: 0.5,\n    roughness: 1.0\n})\n\n\nexport const grayMat = new THREE.MeshStandardMaterial({\n    color: \"#4a4c4d\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const yellowMat = new THREE.MeshStandardMaterial({\n    color: \"#ffd900\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const purpleMat = new THREE.MeshStandardMaterial({\n    color: \"#661c9d\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const platformMat = new THREE.MeshLambertMaterial({\n    color: 0xededed,\n    transparent: true,\n    opacity: 0.4,\n    wireframe: false,\n    side: THREE.DoubleSide,\n})\n\nexport const transparentMat = new THREE.MeshLambertMaterial({\n    color: 0x000000,\n    transparent: true,\n    opacity: 0.2,\n    wireframe: false,\n    side: THREE.DoubleSide,\n    vertexColors: true,\n})\n\nconst tileGridUniforms = {\n    // Resolution of the grid\n    // .335 - exact resolution for 6x6 grid\n    resolution: { value: .335 }\n}\n\nexport const shadowMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(0,0%,85%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\n\nexport const tileGridMat = new THREE.ShaderMaterial({\n    side: THREE.FrontSide,\n    uniforms: tileGridUniforms,\n    fragmentShader: S.gridTileFragment,\n    vertexShader: S.gridTileVertex\n})\n\n\n","import create from 'zustand'\nimport produce from 'immer'\n\n// Contains all of the node-related data\nexport const useNodeStore = create(set => ({\n    nodes: [],\n    setNodeState: (fn) => set(produce(fn)),\n    addNode: (node) => {set(state => ({ nodes: [...state.nodes, node] })); }\n}))","import create from 'zustand'\n\n// Stores the field model for visualization changes\nexport const useModelStore = create(set => ({\n    model: null,\n    setModel: (model) => {set(({ model: model }));}\n}))","import create from \"zustand\"\n\n// Stores various UI options \nexport const useUiLevaStore = create(set => ({\n    currentNodeStore: null, \n    markerMode: false,\n    hideFieldElements: true,\n    showRobotVisualization: true,\n    toggleMarkerMode: () => set(state => ({ markerMode: !state.markerMode })),\n    toggleRobotVisualization: () => set((state) => ({ showRobotVisualization: !state.showRobotVisualization })),\n    toggleFieldElements: () => set((state) => ({ hideFieldElements: !state.hideFieldElements })),\n    setStore: (store) => set(() => ({ currentNodeStore: store }))\n}))","import { useEffect, useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { shadowMat, blueMat, grayMat, lightGrayMat, platformMat, purpleMat, redMat, tileMat, yellowMat, transparentMat } from './materials';\nimport { useNodeStore } from '../stores/NodeStore';\nimport { useModelStore } from '../stores/ModelStore';\nimport { useUiLevaStore } from '../stores/UILevaStore';\n\nexport default function FieldModel(props) {\n  const addNode = useNodeStore(state => state.addNode);\n\n  const tileMesh = useRef(null);\n  const rings = useRef(null);\n\n  const setModel = useModelStore(state => state.setModel)\n\n  const markerMode = useUiLevaStore(state => state.markerMode);\n  const hideTiles = useUiLevaStore(state => state.hideFieldElements);\n\n  /**\n   * Adds new nodes to the node store if the marker mode boolean is true\n   * \n   * @param {Event} clicked The event click to be passed in  \n   */\n  const onFieldTileClick = (clicked) => {\n    clicked.stopPropagation();\n\n    if (markerMode) {\n      // Set an initial name of \"Waypoint\" and initial position of where the user clicked\n      addNode({ name: \"Waypoint\", position: clicked.point });\n    }\n  }\n\n  const group = useRef()\n\n  // Retrieve nodes data from GLTF\n  const { nodes } = useGLTF(process.env.PUBLIC_URL + '/fieldmodel.gltf')\n\n  // Contains a list of all the lexan wall meshes \n  const lexanWallPanels = [\n    nodes.Perimeter_Lexan_Wall_Panel000,\n    nodes.Perimeter_Lexan_Wall_Panel001,\n    nodes.Perimeter_Lexan_Wall_Panel002,\n    nodes.Perimeter_Lexan_Wall_Panel003,\n    nodes.Perimeter_Lexan_Wall_Panel004,\n    nodes.Perimeter_Lexan_Wall_Panel005,\n    nodes.Perimeter_Lexan_Wall_Panel006,\n    nodes.Perimeter_Lexan_Wall_Panel007,\n    nodes.Perimeter_Lexan_Wall_Panel008,\n    nodes.Perimeter_Lexan_Wall_Panel009,\n    nodes.Perimeter_Lexan_Wall_Panel010,\n    nodes.Perimeter_Lexan_Wall_Panel011\n  ]\n\n  // Because GLTF imports a non-transparent material, replace it with our own\n  lexanWallPanels.forEach((tile) => {\n    tile.material = transparentMat\n  })\n\n  useEffect(() => {\n    setModel(tileMesh);\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, 0, 0]} rotation={[Math.PI / 2, 0, Math.PI]}>\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_1.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_2.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_3.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_4.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_5.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_6.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_7.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_8.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_9.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_10.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_11.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_12.geometry} material={grayMat} />\n        <group position={[-58.48, 2.5, -7.19]} rotation={[-Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow\n            geometry={nodes.Platform_Pivot_Bar001.geometry}\n            material={grayMat}\n            position={[58.48, -7.19, -2.5]}\n            rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-58.48, -2.5, -7.19]} rotation={[-1.96, 0, 0]}>\n              <group position={[58.48, -7.6, -0.37]} rotation={[1.95, 0, 0]}>\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_1.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_2.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_3.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_4.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_5.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_6.geometry} material={blueMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_7.geometry} material={blueMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_8.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_9.geometry} material={lightGrayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_10.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_11.geometry} material={platformMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_12.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_13.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_14.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_15.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_16.geometry} material={grayMat} />\n              </group>\n            </group>\n          </mesh>\n        </group>\n      </group>\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_1.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_2.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_3.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_4.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_5.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_6.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_7.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_8.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_9.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_10.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_11.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_12.geometry} material={grayMat} />\n        <group position={[-58.48, 2.5, -7.19]} rotation={[-Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow\n            geometry={nodes.Platform_Pivot_Bar.geometry}\n            material={grayMat}\n            position={[58.48, -7.19, -2.5]}\n            rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-58.48, -2.5, -7.19]} rotation={[-1.96, 0, 0]}>\n              <group position={[58.48, -7.6, -0.37]} rotation={[1.95, 0, 0]}>\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_1.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_2.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_3.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_4.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_5.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_6.geometry} material={redMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_7.geometry} material={redMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_8.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_9.geometry} material={lightGrayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_10.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_11.geometry} material={platformMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_12.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_13.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_14.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_15.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_16.geometry} material={grayMat} />\n              </group>\n            </group>\n          </mesh>\n        </group>\n      </group>\n      <mesh\n        geometry={nodes.Field_Tape_Blue.geometry}\n        material={blueMat}\n        position={[0, 0, 0]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh\n        geometry={nodes.Field_Tape_Red.geometry}\n        material={redMat}\n        position={[0, 0, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        rotation={[Math.PI / 2, 0, 0]}\n        onClick={onFieldTileClick}\n        ref={tileMesh}\n        position={[0, -0.5, 0]}\n        material={tileMat}\n      >\n        <boxGeometry attach=\"geometry\" args={[143, 143, 1]} />\n      </mesh>\n\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel000.geometry}\n        position={[46.84, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel001.geometry}\n        position={[0, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel002.geometry}\n        position={[-46.84, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel003.geometry}\n        position={[70.47, 5.75, 46.84]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel004.geometry}\n        position={[70.47, 5.75, 0]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel005.geometry}\n        position={[70.47, 5.75, -46.84]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel006.geometry}\n        position={[-46.84, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel007.geometry}\n        position={[0, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel008.geometry}\n        position={[46.84, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel009.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, -46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel010.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, 0]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel011.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, 46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket000'].geometry}\n        material={grayMat}\n        position={[69.56, 11.55, -69.56]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket001'].geometry}\n        material={grayMat}\n        position={[69.56, 11.55, 69.57]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket002'].geometry}\n        material={grayMat}\n        position={[-69.56, 11.55, 69.56]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket003'].geometry}\n        material={grayMat}\n        position={[-69.56, 11.55, -69.57]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset000'].geometry}\n        material={grayMat}\n        position={[70.55, 5.75, -70.55]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset001'].geometry}\n        material={grayMat}\n        position={[70.55, 5.75, 70.56]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset002'].geometry}\n        material={grayMat}\n        position={[-70.55, 5.75, 70.55]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset003'].geometry}\n        material={grayMat}\n        position={[-70.55, 5.75, -70.56]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset000'].geometry}\n        material={grayMat}\n        position={[23.42, 11.42, -70.92]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset002'].geometry}\n        material={grayMat}\n        position={[-23.42, 11.42, -70.92]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset004'].geometry}\n        material={grayMat}\n        position={[70.92, 11.42, 23.43]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset006'].geometry}\n        material={grayMat}\n        position={[70.92, 11.42, -23.42]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset008'].geometry}\n        material={grayMat}\n        position={[-23.42, 11.42, 70.92]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset010'].geometry}\n        material={grayMat}\n        position={[23.42, 11.42, 70.92]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset012'].geometry}\n        material={grayMat}\n        position={[-70.92, 11.42, -23.43]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset014'].geometry}\n        material={grayMat}\n        position={[-70.92, 11.42, 23.42]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset001'].geometry}\n        material={grayMat}\n        position={[23.42, 0.08, -70.92]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset003'].geometry}\n        material={grayMat}\n        position={[-23.42, 0.08, -70.92]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset005'].geometry}\n        material={grayMat}\n        position={[70.92, 0.08, 23.43]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset007'].geometry}\n        material={grayMat}\n        position={[70.92, 0.08, -23.42]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset009'].geometry}\n        material={grayMat}\n        position={[-23.42, 0.08, 70.92]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset011'].geometry}\n        material={grayMat}\n        position={[23.42, 0.08, 70.92]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset013'].geometry}\n        material={grayMat}\n        position={[-70.92, 0.08, -23.43]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset015'].geometry}\n        material={grayMat}\n        position={[-70.92, 0.08, 23.42]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component000'].geometry}\n        material={grayMat}\n        position={[46.84, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component001'].geometry}\n        material={grayMat}\n        position={[46.84, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component002'].geometry}\n        material={grayMat}\n        position={[0, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component003'].geometry}\n        material={grayMat}\n        position={[0, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component004'].geometry}\n        material={grayMat}\n        position={[-46.84, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component005'].geometry}\n        material={grayMat}\n        position={[-46.84, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component006'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, 46.84]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component007'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, 46.84]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component008'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component009'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, 0]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component010'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, -46.84]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component011'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, -46.84]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component012'].geometry}\n        material={grayMat}\n        position={[-46.84, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component013'].geometry}\n        material={grayMat}\n        position={[-46.84, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component014'].geometry}\n        material={grayMat}\n        position={[0, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component015'].geometry}\n        material={grayMat}\n        position={[0, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component016'].geometry}\n        material={grayMat}\n        position={[46.84, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component017'].geometry}\n        material={grayMat}\n        position={[46.84, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component018'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, -46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component019'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, -46.84]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component020'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, 0]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component021'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, 0]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component022'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, 46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component023'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, 46.84]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component000'].geometry}\n        material={grayMat}\n        position={[24.35, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component001'].geometry}\n        material={grayMat}\n        position={[69.33, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component002'].geometry}\n        material={grayMat}\n        position={[-24.35, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component003'].geometry}\n        material={grayMat}\n        position={[-22.49, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component004'].geometry}\n        material={grayMat}\n        position={[22.49, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component005'].geometry}\n        material={grayMat}\n        position={[-69.33, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component006'].geometry}\n        material={grayMat}\n        position={[-24.36, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component007'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 24.36]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component008'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 69.33]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component009'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -22.48]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component010'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 22.49]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component011'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -69.33]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component012'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -24.35]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component013'].geometry}\n        material={grayMat}\n        position={[-69.33, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component014'].geometry}\n        material={grayMat}\n        position={[22.49, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component015'].geometry}\n        material={grayMat}\n        position={[-22.49, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component016'].geometry}\n        material={grayMat}\n        position={[69.33, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component017'].geometry}\n        material={grayMat}\n        position={[24.36, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component018'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -24.36]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component019'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -69.33]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component020'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 22.48]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component021'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -22.49]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component022'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 69.33]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component023'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 24.35]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <mesh geometry={nodes.TiP_Lines_1.geometry} material={shadowMat} />\n        <mesh geometry={nodes.TiP_Lines_2.geometry} material={shadowMat} />\n      </group>\n      <group ref={rings} scale={hideTiles ? 0 : 1}>\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Element.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements319.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements321.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements323.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements325.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements327.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements329.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements331.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements333.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements335.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements337.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements339.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements341.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements343.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements345.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements347.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements349.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements351.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements353.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements355.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements357.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements359.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements361.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements363.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements365.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements367.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements369.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements371.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements373.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements375.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements377.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements379.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements381.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements383.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements385.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements387.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements389.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements391.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements393.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements395.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements397.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements399.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n      </group>\n      <group scale={hideTiles ? 0 : 1}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_8.geometry} material={blueMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_8.geometry} material={blueMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_7.geometry} material={redMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_8.geometry} material={grayMat} />\n        </group>\n        <group name=\"\" rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_7.geometry} material={redMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_8.geometry} material={grayMat} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + '/fieldmodel.gltf')\n","/* eslint-disable no-unused-vars */\n/** This EventsControls will allow to facilitate development speed for simple manipulations by means of a mouse\n* - point and click, drag and drop.\n* @author Vildanov Almaz / alvild@gmail.com\n* R18 version 10.10.2015.\n*/\n\n// intersects = raycaster.intersectObjects( objects );\n// =>\n// intersects[ 0 ].object = this.focused\n//     OR\n// intersects[ 0 ].object = this.mouseOvered\n// this.event = intersects[ 0 ];\n// this.event.item - number of the selected object\n// this.event.distance - distance between the origin of the ray and the intersection\n// this.event.point - point of intersection, in world coordinates\n// this.event.face - intersected face\n// this.event.faceIndex - index of the intersected face\n// this.event.indices - indices of vertices comprising the intersected face\n\nimport * as THREE from 'three'\n\n\nTHREE.Object3D.userDataParent = null;\nTHREE.Mesh.userDataParent = null;\n\nexport const EventsControls = function (camera, domElement) {\n\n\tvar _this = this;\n\n\tthis.camera = camera;\n\tthis.container = (domElement !== undefined) ? domElement : document;\n\n\tthis.containerWidth = this.container.width;\n\tthis.containerHeight = this.container.height;\n\n\tvar _DisplaceFocused = null; // выделенный объект\n\tthis.focused = null; // выделенный объект\n\tthis.focusedChild = null; // выделенная часть 3D объекта\n\tthis.previous = new THREE.Vector3(); // предыдущие координаты выделенного объекта\n\tvar _DisplacemouseOvered = null; // наведенный объект\t\n\tthis.mouseOvered = null; // наведенный объект\n\tthis.mouseOveredChild = null; // наведенная часть 3D объекта\t\n\n\tthis.raycaster = new THREE.Raycaster();\n\n\tthis.map = null;\n\tthis.event = null;\n\tthis.offset = new THREE.Vector3();\n\tthis.offsetUse = false;\n\t\n\tthis._altUsed = false;\n\n\tthis._mouse = new THREE.Vector2();\n\tthis.mouse = new THREE.Vector2();\n\tthis._vector = new THREE.Vector3();\n\tthis._direction = new THREE.Vector3();\n\n\tvar _collidable = false;\n\tthis.collidableEntities = [];\n\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.objects = [];\n\tvar _DisplaceIntersects = [];\n\tvar _DisplaceIntersectsMap = [];\n\tthis.intersects = [];\n\tthis.intersectsMap = [];\n\n\tthis.update = function () {\n\t\tif (_this.enabled) {\n\t\t\tonContainerMouseMove();\n\t\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t\t}\n\t}\n\n\tthis.dragAndDrop = function () { } // example: this.container.style.cursor = 'move'; \n\tthis.mouseOver = function () { } // example: this.container.style.cursor = 'pointer';\n\tthis.mouseOut = function () { } // example: this.container.style.cursor = 'auto';\n\tthis.mouseUp = function () { } // example: this.container.style.cursor = 'auto';\n\tthis.mouseMove = function () { }\n\tthis.onclick = function () { }\n\n\tthis.attach = function (object) {\n\n\t\tif (object instanceof THREE.Mesh) {\n\t\t\tthis.objects.push(object);\n\t\t}\n\t\telse {\n\n\t\t\tthis.objects.push(object);\n\n\t\t\tfor (var i = 0; i < object.children.length; i++) {\n\t\t\t\tobject.children[i].userDataParent = object;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tthis.detach = function (object) {\n\n\t\tvar item = _this.objects.indexOf(object);\n\t\tthis.objects.splice(item, 1);\n\n\t}\n\n\tvar _mouseOverFlag = false;\n\tvar _mouseOutFlag = false;\n\tvar _dragAndDropFlag = false;\n\tvar _mouseUpFlag = false;\n\tvar _onclickFlag = false;\n\tvar _mouseMoveFlag = false;\n\n\tthis.attachEvent = function (event, handler) {\n\n\t\tswitch (event) {\n\t\t\tcase 'mouseOver': this.mouseOver = handler; _mouseOverFlag = true; break;\n\t\t\tcase 'mouseOut': this.mouseOut = handler; _mouseOutFlag = true; break;\n\t\t\tcase 'dragAndDrop': this.dragAndDrop = handler; _dragAndDropFlag = true; break;\n\t\t\tcase 'mouseUp': this.mouseUp = handler; _mouseUpFlag = true; break;\n\t\t\tcase 'onclick': this.onclick = handler; _onclickFlag = true; break;\n\t\t\tcase 'mouseMove': this.mouseMove = handler; _mouseMoveFlag = true; break;\n\t\t\tdefault: break;;\n\t\t}\n\n\t}\n\n\tthis.detachEvent = function (event) {\n\n\t\tswitch (event) {\n\t\t\tcase 'mouseOver': _mouseOverFlag = false; break;\n\t\t\tcase 'mouseOut': _mouseOutFlag = false; break;\n\t\t\tcase 'dragAndDrop': _dragAndDropFlag = false; break;\n\t\t\tcase 'mouseUp': _mouseUpFlag = false; break;\n\t\t\tcase 'onclick': _onclickFlag = false; break;\n\t\t\tcase 'mouseMove': _mouseMoveFlag = false; break;\n\t\t\tdefault: break;\n\t\t}\n\n\t}\n\n\tthis.setFocus = function (object) {\n\n\t\t_DisplaceFocused = object;\n\t\t_this.event.item = _this.objects.indexOf(object);\n\n\t\tif (object.userDataParent) {\n\t\t\tthis.focused = object.userDataParent;\n\t\t\tthis.focusedChild = _DisplaceFocused;\n\t\t\tthis.previous.copy(this.focused.position);\n\t\t}\n\t\telse {\n\t\t\tthis.focused = object; this.focusedChild = null;\n\t\t\tthis.previous.copy(this.focused.position);\n\t\t}\n\n\t}\n\n\tthis.removeFocus = function () {\n\n\t\t_DisplaceFocused = null;\n\t\tthis.focused = null;\n\t\tthis.focusedChild = null;\n\t\tthis.event = null;\n\n\t}\n\n\tthis.select = function (object) {\n\n\t\t_DisplacemouseOvered = object;\n\t\t_this.event.item = _this.objects.indexOf(object);\n\t\tif (object.userDataParent) {\n\t\t\tthis.mouseOvered = object.userDataParent;\n\t\t\tthis.mouseOveredChild = _DisplacemouseOvered;\n\t\t}\n\t\telse {\n\t\t\tthis.mouseOvered = object; this.mouseOveredChild = null;\n\t\t}\n\n\t}\n\n\tthis.deselect = function () {\n\n\t\t_DisplacemouseOvered = null;\n\t\tthis.mouseOvered = null;\n\t\tthis.mouseOveredChild = null;\n\t\tthis.event = null;\n\n\t}\n\n\tthis.returnPrevious = function () {\n\n\t\t_this.focused.position.copy(this.previous);\n\n\t}\n\n\tthis._raySet = function () {\n\n\t\tif (_this.camera instanceof THREE.OrthographicCamera) {\n\n\t\t\t_this._vector.set(_this._mouse.x, _this._mouse.y, - 1).unproject(_this.camera);\n\t\t\t_this._direction.set(0, 0, -1).transformDirection(_this.camera.matrixWorld);\n\t\t\t_this.raycaster.set(_this._vector, _this._direction);\n\n\t\t}\n\t\telse {\n\n\t\t\tvar vector = new THREE.Vector3(_this._mouse.x, _this._mouse.y, 1);\n\t\t\t//_this._projector.unprojectVector( vector, camera ); \n\t\t\tvector.unproject(_this.camera);\n\t\t\t//\t_this.raycaster = new THREE.Raycaster( _this.camera.position, vector.sub( _this.camera.position ).normalize() );\n\t\t\t_this.raycaster.set(_this.camera.position, vector.sub(_this.camera.position).normalize());\n\n\t\t}\n\n\t}\n\n\tthis._setMap = function () {\n\n\t\t_this.intersectsMap = _DisplaceIntersectsMap;\n\n\t}\n\n\tfunction getMousePos(event) {\n\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t_this._mouse.x = ((x) / _this.container.width) * 2 - 1;\n\t\t_this._mouse.y = - ((y) / _this.container.height) * 2 + 1;\n\n\t\tonContainerMouseMove();\n\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t}\n\n\tfunction getTouchPos(event) {\n\t\tif (_this.enabled) {\n\t\t\tevent = event.changedTouches[0];\n\t\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t\t_this._mouse.x = (x / _this.containerWidth) * 2 - 1;\n\t\t\t_this._mouse.y = - (y / _this.containerHeight) * 2 + 1;\n\n\t\t\tonContainerMouseMove();\n\t\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t\t}\n\t}\n\n\tfunction getTouchPos2(event) {\n\t\tif (_this.enabled) {\n\t\t\tevent = event.changedTouches[0];\n\t\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t\t_this._mouse.x = ((x) / _this.containerWidth) * 2 - 1;\n\t\t\t_this._mouse.y = - ((y) / _this.containerHeight) * 2 + 1;\n\n\t\t}\n\t}\n\n\tfunction onContainerMouseDown(event) {\n\n\t\tif (_this.enabled && (_onclickFlag || _dragAndDropFlag)) {\n\t\t\tif (_this.focused) { return; }\n\t\t\tif (event.altKey) _this._altUsed = true;\n\t\t\t\n\t\t\t_this._raySet();\n\t\t\t_this.intersects = _this.raycaster.intersectObjects(_this.objects, true);\n\n\t\t\tif (_this.intersects.length > 0) {\n\n\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t_this.setFocus(_this.intersects[0].object);\n\n\t\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t\t_this.intersects = _this.raycaster.intersectObject(_this.map);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (_this.offsetUse) {\n\t\t\t\t\t\t\tvar pos = new THREE.Vector3().copy(_this.focused.position);\n\t\t\t\t\t\t\t_this.offset.subVectors(_this.intersects[0].point, pos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//_this.offset.copy( _this.intersects[ 0 ].point ).sub( _this.map.position );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) { }\n\n\t\t\t\t}\n\n\t\t\t\t_this.onclick(event);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_this.removeFocus(); _this.event = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerTouchDown(event) {\n\n\t\tevent = event.changedTouches[0];\n\t\tgetTouchPos2(event);\n\t\tif (_this.enabled && (_onclickFlag || _dragAndDropFlag)) {\n\t\t\tif (_this.focused) { return; }\n\t\t\t_this._raySet();\n\t\t\t_this.intersects = _this.raycaster.intersectObjects(_this.objects, true);\n\n\t\t\tif (_this.intersects.length > 0) {\n\n\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t_this.setFocus(_this.intersects[0].object);\n\n\t\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t\t_this.intersects = _this.raycaster.intersectObject(_this.map);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (_this.offsetUse) {\n\t\t\t\t\t\t\tvar pos = new THREE.Vector3().copy(_this.focused.position);\n\t\t\t\t\t\t\t_this.offset.subVectors(_this.intersects[0].point, pos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//_this.offset.copy( _this.intersects[ 0 ].point ).sub( _this.map.position );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) { }\n\n\t\t\t\t}\n\n\t\t\t\t_this.onclick(event);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_this.removeFocus(); _this.event = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerMouseMove() {\n\n\t\t_this._raySet();\n\n\t\tif (_this.focused) {\n\n\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t// _DisplaceIntersectsMap = _this.raycaster.intersectObject(_this.objects)\n\t\t\t\t_DisplaceIntersectsMap = _this.raycaster.intersectObject(_this.map);\n\t\t\t\t//_this._setMap();\n\t\t\t\ttry {\n\n\t\t\t\t\tvar pos = new THREE.Vector3().copy(_DisplaceIntersectsMap[0].point.sub(_this.offset));\n\n\t\t\t\t\t_this.focused.position.copy(pos);\n\t\t\t\t}\n\t\t\t\tcatch (err) { }\n\n\t\t\t\t_this.dragAndDrop(_this._altUsed);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\tif (_mouseOverFlag) {\n\n\t\t\t\t_DisplaceIntersects = _this.raycaster.intersectObjects(_this.objects, true);\n\t\t\t\t_this.intersects = _DisplaceIntersects;\n\t\t\t\tif (_this.intersects.length > 0) {\n\t\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t\tif (_this.mouseOvered) {\n\t\t\t\t\t\tif (_DisplacemouseOvered !== _this.intersects[0].object) {\n\t\t\t\t\t\t\t_this.mouseOut();\n\t\t\t\t\t\t\t_this.select(_this.intersects[0].object);\n\t\t\t\t\t\t\t_this.mouseOver();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_this.select(_this.intersects[0].object);\n\t\t\t\t\t\t_this.mouseOver();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_DisplacemouseOvered) { _this.mouseOut(); _this.deselect(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerMouseUp(event) {\n\n\t\tif (_this.enabled) {\n\t\t\tif (_this.focused) {\n\n\t\t\t\t_this._altUsed = false;\n\t\t\t\t_this.mouseUp();\n\t\t\t\t_DisplaceFocused = null;\n\t\t\t\t_this.focused = null;\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\n\tthis.container.addEventListener('mousedown', onContainerMouseDown, {passive: true, capture: true});\t// мышка нажата\n\tthis.container.addEventListener('mousemove', getMousePos, {passive: true, capture: true});   // получение координат мыши\n\tthis.container.addEventListener('mouseup', onContainerMouseUp, {passive: true, capture: true});       // мышка отпущена\n\tthis.container.addEventListener('touchstart', onContainerTouchDown, {passive: true, capture: true});\n\tthis.container.addEventListener('touchmove', getTouchPos, {passive: true, capture: true});\n\n};\n","import { useControls, useCreateStore } from \"leva\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { Text, Billboard } from \"@react-three/drei\"\nimport { useThree } from \"@react-three/fiber\"\nimport { EventsControls } from \"../controls/EventsControls\";\nimport { tileMat, tileGridMat } from \"../models/materials\";\nimport { useNodeStore } from \"../stores/NodeStore\";\nimport * as S from \"../models/shaders\";\n\nexport default function Node({ dragging, node, index, selected, setSelect, setDragging, model }) {\n    const store = useCreateStore();\n\n    const vertexShader = S.gridTileVertex;\n    const fragmentShader = S.gridTileFragment;\n\n    const setNodeState = useNodeStore(state => state.setNodeState);\n\n    const { gl, camera } = useThree();\n\n    const mesh = useRef(null)\n    const [hovered, setHover] = React.useState(false)\n\n    const billboard = useRef(null);\n\n    let [{ name }, set] = useControls(\n        () => ({\n            name: \"Waypoint\",\n            position: [0, 0, 0]\n        }),\n        { store }\n    )\n\n    useEffect(() => {\n        // As the node has just been initialized, set it as the currently selected node in the store\n        setSelect([index, store])\n\n        // Wait until the mesh has been loaded\n        if (mesh.current !== null && model !== null) {\n            // Update the node position and name\n            set({ position: [node.position.x, node.position.y, node.position.z], name: node.name })\n\n            const eventControls = new EventsControls(camera, gl.domElement);\n\n            eventControls.attachEvent('mouseOver', function () {\n                if (dragging === false)\n                    setDragging(true);\n                if (hovered === false)\n                    setHover(true);\n            })\n\n            eventControls.attachEvent('onclick', function (event) {\n                // If the user is holding down the alt key, switch to the tile grid material\n                if (event.altKey)\n                    model.current.material = tileGridMat;\n            })\n\n            eventControls.attachEvent('mouseOut', function () {\n                setDragging(false);\n                setHover(false);\n            })\n\n            eventControls.attachEvent('mouseUp', function () {\n                mesh.current.material.opacity = 1;\n                model.current.material = tileMat\n\n                setHover(true);\n            })\n\n            eventControls.attachEvent('dragAndDrop', function (altUsed) {\n                // If alt is being used, snap to the grid\n                if (altUsed) {\n                    // Switch to the tile grid shader if it hasn't already\n                    if (model.current.material === tileMat)\n                        model.current.material = tileGridMat(fragmentShader, vertexShader)\n\n                    this.focused.position.x = 11.855 * Math.round((this.focused.position.x) / 11.855);\n                    this.focused.position.z = 11.855 * Math.round((this.focused.position.z) / 11.855);\n                } else {\n                    // Update marker position to wherever the mouse pointer is currently located\n                    this.focused.position.y = this.previous.y;\n                }\n            });\n\n            eventControls.attach(mesh.current);\n\n            eventControls.map = model.current;\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index, setSelect, store, camera, gl.domElement, setDragging, model])\n\n    useEffect(() => {\n        // Update the node's position and name\n        setNodeState(state => {\n            if (mesh.current !== null) {\n                state.nodes[index].position = mesh.current.position;\n\n                state.nodes[index].name = name;\n            }\n        })\n    }, [index, setNodeState, name])\n\n    /**\n     * Fetches the current mesh position based on the mesh ref\n     * @returns The current mesh position in the format [x, y, z]\n     */\n    function getMeshPos() {\n        const currentPos = mesh.current.position;\n\n        return [currentPos.x, currentPos.y, currentPos.z];\n    }\n\n    /**\n     * Fetches the current billboard position, based on the mesh reference with a y offset\n     * @returns The current billboard position in the format [x, y, z]\n     */\n    function getBillboardPos() {\n        let meshPos = getMeshPos();\n\n        return [meshPos[0], meshPos[1] + 2.5, meshPos[2]];\n    }\n\n    // Update the leva UI display\n    set({ position: mesh.current === null ? [-1, -1, -1] : getMeshPos() })\n\n    return (\n        <>\n            <Billboard\n                ref={billboard}\n                position={mesh.current !== null ? getBillboardPos() : [0, 1, 0]}\n                follow={true}\n                args={[0, 0]}\n            >\n                <Text\n                    color=\"#ededed\"\n                    fontSize={1.5}\n                    maxWidth={60}\n                    lineHeight={1}\n                    outlineBlur={\"15%\"}\n                    outlineColor={\"#000000\"}\n                    textAlign=\"left\"\n                    anchorX=\"center\"\n                    anchorY=\"middle\">\n                    {name}\n                </Text>\n            </Billboard>\n\n            <mesh\n                position={node.position}\n                ref={mesh}\n                scale={1}\n                onClick={(_event) => { setSelect([index, store]); }}\n            >\n                <cylinderGeometry args={[1, 1, 1]} />\n\n                <meshStandardMaterial metalness={0.5} transparent={true} opacity={1} color={selected ? 'green' : hovered ? 'yellow' : 'blue'} />\n            </mesh>\n        </>\n    )\n}","export class CubicHermiteSpline {\n    constructor(points, tangents) {\n        this.points = points;\n        this.tangents = tangents;\n    }\n\n    getPoints(count) {\n        const interpolatedPoints = [];\n\n        const increment = (1 / count);\n\n        for (let i = 0; i < 1; i += increment) {\n            interpolatedPoints.push(this.getPointAtTime(i));\n        }\n\n        return interpolatedPoints;\n    }\n\n    getPointAtTime(t) {\n        const points = this.points;\n        const tangents = this.tangents;\n\n        const tanForce = 3;\n\n        const p0 = points[0];\n        const p1 = points[1];\n\n        const v0 = tangents[0];\n        const v1 = tangents[1];\n\n        const t2 = t * t;\n        const t3 = t2 * t;\n        const _2t3 = 2.0 * t3;\n        const _3t2 = 3.0 * t2;\n\n        const a = _2t3 - _3t2 + 1.0;\n        const b = -_2t3 + _3t2;\n        const c = t3 - 2.0 * t2 + t;\n        const d = t3 - t2;\n\n        const x = p0[0] * a + (p1[0] * b + tanForce * ((v0[0] - p0[0]) * c + (p1[0] - v1[0]) * d));\n        const y = p0[1] * a + (p1[1] * b + tanForce * ((v0[1] - p0[1]) * c + (p1[1] - v1[1]) * d));\n\n        // const n = points.length; // number or points / tangents / knots\n        // const d = points[0].length; // vector dimensionality\n        // const v = new Array(d); // destination vector\n\n        // t = t * (n - 1); // rescale t to [0, n-1]\n        // const i0 = t | 0; // truncate\n        // let i1 = i0 + 1;\n\n        // if (i0 > n - 1) throw new Error('out of bounds');\n        // if (i0 === n - 1) i1 = i0;\n\n        // const scale = i1 - i0;\n\n        // t = (t - i0) / scale;\n\n        // const t2 = t * t;\n        // const it = 1 - t;\n        // const it2 = it * it;\n        // const tt = 2 * t;\n        // const h00 = (1 + tt) * it2;\n        // const h10 = t * it2;\n        // const h01 = t2 * (3 - tt);\n        // const h11 = t2 * (t - 1);\n\n        // for (var i = 0; i < d; i++) {\n        //     v[i] = h00 * points[i0][i] +\n        //         h10 * tangents[i0][i] * scale +\n        //         h01 * points[i1][i] +\n        //         h11 * tangents[i1][i] * scale;\n        // }\n\n        return [x, y];\n\n        // return v;\n    }\n\n}","import { useThree } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport * as THREE from 'three'\nimport { EventsControls } from '../controls/EventsControls';\nimport * as S from \"../models/shaders\";\n\nimport * as M from '../models/materials'\nimport { CubicHermiteSpline } from '../lib/CubicHermiteSpline';\nimport { useUiLevaStore } from '../stores/UILevaStore';\n\nexport default function NodeConnection({ dragging, setDragging, model, startMarker, endMarker }) {\n\n    const robotVisualization = useUiLevaStore(state => state.showRobotVisualization);\n\n    const startPos = startMarker.position;\n    const endPos = endMarker.position;\n\n    const [vectors, setVectors] = useState([new THREE.Vector2(20, 0), new THREE.Vector2(0, 0)]);\n\n    const vertexShader = S.gridTileVertex;\n    const fragmentShader = S.gridTileFragment;\n\n    const { gl, camera } = useThree();\n\n    const v0Mesh = useRef(null);\n    const v1Mesh = useRef(null);\n\n    // Because a callback can't access an updated state value, use a ref\n    const vectorRef = useRef();\n\n    vectorRef.current = vectors;\n\n    const position = new THREE.Vector3();\n\n    // Calculate the midpoint of the vectors\n    position.subVectors(endPos, startPos).divideScalar(2).add(startPos);\n\n    const [hovered, setHover] = useState(false)\n\n    // Add a bit of y-offset to avoid clipping the floor\n    position.add(new THREE.Vector3(0, 0.01, 0));\n\n    const velocityScalarFunc = (val) => val * 1;\n\n    // Construct the hermite spline \n    const curve = new CubicHermiteSpline([[startPos.x, startPos.z], [endPos.x, endPos.z]], [[velocityScalarFunc(vectors[0].x), velocityScalarFunc(vectors[0].y)], [velocityScalarFunc(vectors[1].x), velocityScalarFunc(vectors[1].y)]]);\n\n    useEffect(() => {\n        if (v0Mesh.current !== null && v1Mesh.current !== null && model !== null) {\n            const eventControls = new EventsControls(camera, gl.domElement);\n\n            eventControls.attachEvent('mouseOver', function () {\n                if (dragging === false)\n                    setDragging(true);\n                if (hovered === false)\n                    setHover(true);\n            })\n\n            eventControls.attachEvent('onclick', function (event) {\n                if (event.altKey)\n                    model.current.material = M.tileGridMat(fragmentShader, vertexShader)\n            })\n\n            eventControls.attachEvent('mouseOut', function () {\n                setHover(false);\n                setDragging(false);\n            })\n\n            eventControls.attachEvent('mouseUp', function () {\n                this.focused.material.opacity = 1;\n                model.current.material = M.tileMat\n\n                setHover(true);\n            })\n\n            eventControls.attachEvent('dragAndDrop', function (altUsed) {\n                // If alt is being used, snap to the grid\n                if (altUsed) {\n                    // Switch to the tile grid shader if it hasn't already\n                    if (model.current.material === M.tileMat)\n                        model.current.material = M.tileGridMat(fragmentShader, vertexShader)\n\n                    this.focused.position.x = 11.855 * Math.round((this.focused.position.x) / 11.855);\n                    this.focused.position.z = 11.855 * Math.round((this.focused.position.z) / 11.855);\n                }\n\n                if (this.focused.name === \"v0\") {\n\n                    setVectors([new THREE.Vector2(this.focused.position.x, this.focused.position.z), vectorRef.current[1]]);\n                } else {\n                    setVectors([vectorRef.current[0], new THREE.Vector2(this.focused.position.x, this.focused.position.z)]);\n                }\n            });\n\n            eventControls.attach(v0Mesh.current);\n            eventControls.attach(v1Mesh.current);\n\n            eventControls.map = model.current;\n        }\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [camera, gl.domElement, model, dragging, setDragging])\n    let points = curve.getPoints(400);\n\n    // Create the spline geometry from the generated points\n    const geometry = new THREE.BufferGeometry().setFromPoints(points.map((v, i) => new THREE.Vector2(v[0], v[1])));\n\n    // Create the lines between the nodes and tangents\n    const v0Geometry = new THREE.BufferGeometry().setFromPoints([startPos, new THREE.Vector3(vectors[0].x, 0, vectors[0].y)]);\n    const v1Geometry = new THREE.BufferGeometry().setFromPoints([endPos, new THREE.Vector3(vectors[1].x, 0, vectors[1].y)]);\n\n    // Determines how many visualization meshes are constructed (more is less)\n    const visualizationDrawRate = 24;\n\n    // Represents the robot's size measurements in inches\n    const robotWidth = 18;\n    const robotDepth = 18;\n    const robotHeight = 18;\n\n    return (\n        <>\n            <mesh name={\"v0\"} ref={v0Mesh} position={[vectors[0].x, 0, vectors[0].y]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshStandardMaterial color={\"red\"} />\n            </mesh>\n\n            <mesh name={\"v1\"} ref={v1Mesh} position={[vectors[1].x, 0, vectors[1].y]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshStandardMaterial color={\"green\"} />\n            </mesh>\n\n            <line position={[0, 0.1, 0]} rotation={[Math.PI / 2, 0, 0]} geometry={geometry} />\n            {robotVisualization ? points.slice(0, -1).filter((_element, index) => index % visualizationDrawRate === 0).map((v, i) => {\n                i = i * visualizationDrawRate;\n\n                return (\n                    <mesh rotation={[0, Math.atan2(v[0] - points[i + 1][0], v[1] - points[i + 1][1]), 0]} position={[points[i + 1][0], 0, points[i + 1][1]]} >\n                        <boxGeometry args={[robotWidth, robotHeight, robotDepth]} />\n                        <meshStandardMaterial color={\"red\"} depthWrite={false} depthTest={false} opacity={0.2} transparent={true} /> */\n                    </mesh>\n                )\n            }) : <></>}\n\n            <line position={[0, 0.1, 0]} geometry={v0Geometry}>\n                <lineBasicMaterial color={\"yellow\"} />\n            </line>\n\n            <line position={[0, 0.1, 0]} geometry={v1Geometry}>\n                <lineBasicMaterial color={\"yellow\"} />\n            </line>\n        </>)\n}","import React from \"react\";\nimport { OrbitControls, Stats } from \"@react-three/drei\"\nimport Node from \"./Node\"\nimport { useNodeStore } from \"../stores/NodeStore\";\nimport { useState } from \"react\";\nimport shallow from 'zustand/shallow'\nimport { button, useControls } from \"leva\";\nimport { useModelStore } from \"../stores/ModelStore\";\nimport { useUiLevaStore } from \"../stores/UILevaStore\";\nimport { useEffect } from \"react\";\nimport NodeConnection from \"./NodeConnection\";\n\nexport default function UIManager() {\n\n    const nodes = useNodeStore(state => state.nodes);\n    const model = useModelStore(state => state.model);\n\n    const { setMarkerMode, setUiStore } = useUiLevaStore(state => ({ setMarkerMode: state.setMarkerMode, setUiStore: state.setStore }), shallow);\n\n    const [dragging, setDragging] = useState(false);\n\n    useControls(\n        {\n            \"Remove All Markers\": button(() => { })\n        }\n    )\n\n    const [[selection, store], setSelection] = React.useState([-1, null]);\n\n    useEffect(() => {\n        setUiStore(store);\n    }, [store, setMarkerMode, setUiStore])\n\n    return <>\n        {(nodes.map((v, i) => (\n            <Node\n                key={i}\n                node={v}\n                selected={selection !== null ? selection === i : false}\n                setSelect={setSelection}\n                dragging={dragging}\n                setDragging={setDragging}\n                model={model}\n                index={i}\n            />\n        )))}\n        {(nodes.slice(0, -1).map((v, i) => {\n            return <NodeConnection model={model} dragging={dragging} setDragging={setDragging} startMarker={v} endMarker={nodes[i + 1]}/>\n        }))}\n\n\n        {<OrbitControls enabled={!dragging} />}\n        <Stats/>\n    </>\n\n}","import { useRef, useState } from \"react\";\nimport { button, Leva, LevaPanel, useControls } from \"leva\";\nimport { useUiLevaStore } from \"../stores/UILevaStore\";\nimport * as THREE from \"three\";\nimport { useNodeStore } from \"../stores/NodeStore\";\n\n\nexport default function UI() {\n    const importButton = useRef();\n    const waypointButton = useRef();\n\n    const nodes = useNodeStore(state => state.nodes);\n    const addNode = useNodeStore(state => state.addNode);\n\n    const store = useUiLevaStore(state => state.currentNodeStore)\n    const toggleFieldElements = useUiLevaStore(state => state.toggleFieldElements);\n\n    const toggleMarkerMode = useUiLevaStore(state => state.toggleMarkerMode);\n    const toggleRobotVisualization = useUiLevaStore(state => state.toggleRobotVisualization);\n\n    const [buttonSelected, setButtonSelected] = useState(false);\n\n    const { importString } = useControls(\n        {\n            hideGameElements: {\n                value: false,\n                onChange: () => { toggleFieldElements(); }\n            },\n            showRobotVisualization: {\n                value: false,\n                onChange: () => { toggleRobotVisualization(); }\n            },\n            importString: \"Import String Goes Here\"\n        }\n    )\n\n    /**\n     * Imports a list of waypoints from a JSON string \n     * @param importString The JSON string to import from\n     */\n    let importProject = (importString) => {\n        const parsedNodes = JSON.parse(importString);\n\n        for (const index in parsedNodes) {\n            // Change serialized position to be a THREE.Vector3\n            let node = parsedNodes[index];\n\n            node.position = new THREE.Vector3(node.position.x, node.position.y, node.position.z);\n\n            addNode(parsedNodes[index]);\n        }\n    }\n\n    /**\n     * Exports a list of waypoints \n     * @returns A JSON string containing the waypoint data\n     */\n    let exportProject = () => {\n        console.log(JSON.stringify(nodes));\n        return JSON.stringify(nodes);\n    }\n\n    return (\n        <div style={{ position: \"absolute\", right: \"1em\", top: \"1em\" }} className=\"panel\">\n            <div className={\"leva-c-kWgxhW leva-c-kWgxhW-bSMcqW-fill-true leva-c-kWgxhW-nNfbl-hideTitleBar-true\"}>\n                <div className={\"leva-c-hBtFDW\"}>\n                    <div className={\"leva-c-dmsJDs leva-c-dmsJDs-lpvxwm-toggled-true leva-c-dmsJDs-hXSjjU-isRoot-true\"}>\n                        <div className={\"leva-c-bduird\"}>\n                            <button\n                                ref={importButton}\n                                onClick={() => { importProject(importString) }}\n                                style={{ color: \"#ededed\", backgroundColor: (\"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{\"Import Project\"}\n                            </button>\n                            <button\n                                ref={importButton}\n                                onClick={() => { exportProject() }}\n                                style={{ color: \"#ededed\", backgroundColor: (\"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{\"Export Project\"}\n                            </button>\n                            <div /><div /><div />\n                            <button\n                                ref={waypointButton}\n                                onClick={() => { setButtonSelected(!buttonSelected); toggleMarkerMode(); }}\n                                style={{ color: \"#ededed\", backgroundColor: (buttonSelected ? \"#ff003c\" : \"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{buttonSelected ? \"Exit Waypoint Creation\" : \"Enter Waypoint Creation\"}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <LevaPanel store={store} fill flat titleBar={false} />\n            <Leva fill flat titleBar={false} style={{ position: \"absolute\" }} />\n\n        </div>\n    )\n}","import * as THREE from 'three'\nimport React, { useRef, Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport FieldModel from \"./models/FieldModel\"\nimport './App.css'\nimport NUIManagerRenderer from './ui/UIManager'\nimport UI from './ui/UI'\n\n/**\n * Filters the intersections of the raycast to only use the first found object. This prevents multiple objects being selected by one raycast.\n * @param intersections The intersections the raycaster has found\n * @returns only the first object the raycaster found\n */\nfunction intersectionsFilter(intersections: THREE.Intersection[]) {\n  return intersections?.length ? [intersections[0]] : intersections\n}\n\nexport default function App() {\n  const camera = useRef<THREE.PerspectiveCamera>(null!);\n\n  // Create sphere geometry to hold the background image\n  const sphereGeometry = new THREE.SphereGeometry(500, 60, 40);\n\n  // Invert the geometry for the textures to face inwards\n  sphereGeometry.scale(-1, 1, 1);\n\n  // Load the background texture from the public \n  const backgroundTexture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + \"/background.jpg\");\n\n  // Create the material for the sphere background\n  const sphereMaterial = new THREE.MeshBasicMaterial({\n    map: backgroundTexture\n  });\n\n  return (\n    <>\n      <UI/>\n      <Canvas\n        shadows={true}\n        raycaster={{ filter: intersectionsFilter }}\n        gl={{ antialias: true}}\n        camera={{ ref: camera, fov: 75, position: [0, 100, 100] }}>\n\n        <NUIManagerRenderer/>\n\n        <ambientLight intensity={0.25} />\n        <directionalLight\n          position={[200, 200, -100]}\n          shadow-mapSize-width={4096}\n          shadow-mapSize-height={4096}\n          intensity={0.65}\n          shadow-camera-left={-100}\n          shadow-camera-right={100}\n          shadow-camera-top={80}\n          shadow-camera-bottom={-80}\n          castShadow={true}\n        />\n\n        <mesh name={\"Sphere Background Image\"} geometry={sphereGeometry} material={sphereMaterial} />\n\n        <Suspense fallback={null}>\n          <FieldModel/>\n        </Suspense>\n\n      </Canvas>\n    </>\n  )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}