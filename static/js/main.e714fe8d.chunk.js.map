{"version":3,"sources":["models/materials.js","stores/NodeStore.jsx","stores/ModelStore.jsx","stores/UILevaStore.jsx","models/FieldModel.js","controls/EventsControls.js","models/shaders.js","ui/Node.jsx","lib/CubicHermiteSpline.js","ui/NodeConnection.jsx","ui/UIManager.jsx","ui/UI.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["redMat","THREE","color","metalness","roughness","blueMat","lightGrayMat","tileMat","grayMat","yellowMat","purpleMat","platformMat","transparent","opacity","wireframe","side","transparentMat","vertexColors","tileGridUniforms","resolution","value","shadowMat","tileGridMat","fragmentShader","vertexShader","uniforms","useNodeStore","create","set","nodes","setNodeState","fn","produce","addNode","node","state","console","log","useModelStore","model","setModel","useUiLevaStore","currentNodeStore","markerMode","hideFieldElements","showRobotVisualization","toggleMarkerMode","toggleFieldElements","store","setStore","Model","props","tileMesh","useRef","rings","hideTiles","group","useGLTF","process","Perimeter_Lexan_Wall_Panel000","Perimeter_Lexan_Wall_Panel001","Perimeter_Lexan_Wall_Panel002","Perimeter_Lexan_Wall_Panel003","Perimeter_Lexan_Wall_Panel004","Perimeter_Lexan_Wall_Panel005","Perimeter_Lexan_Wall_Panel006","Perimeter_Lexan_Wall_Panel007","Perimeter_Lexan_Wall_Panel008","Perimeter_Lexan_Wall_Panel009","Perimeter_Lexan_Wall_Panel010","Perimeter_Lexan_Wall_Panel011","forEach","tile","material","useEffect","ref","dispose","position","rotation","Math","PI","castShadow","receiveShadow","geometry","RedPlatform159","RedPlatform159_1","RedPlatform159_2","RedPlatform159_3","RedPlatform159_4","RedPlatform159_5","RedPlatform159_6","RedPlatform159_7","RedPlatform159_8","RedPlatform159_9","RedPlatform159_10","RedPlatform159_11","RedPlatform159_12","Platform_Pivot_Bar001","RedPlatform161","RedPlatform161_1","RedPlatform161_2","RedPlatform161_3","RedPlatform161_4","RedPlatform161_5","RedPlatform161_6","RedPlatform161_7","RedPlatform161_8","RedPlatform161_9","RedPlatform161_10","RedPlatform161_11","RedPlatform161_12","RedPlatform161_13","RedPlatform161_14","RedPlatform161_15","RedPlatform161_16","RedPlatform","RedPlatform_1","RedPlatform_2","RedPlatform_3","RedPlatform_4","RedPlatform_5","RedPlatform_6","RedPlatform_7","RedPlatform_8","RedPlatform_9","RedPlatform_10","RedPlatform_11","RedPlatform_12","Platform_Pivot_Bar","RedPlatform125","RedPlatform125_1","RedPlatform125_2","RedPlatform125_3","RedPlatform125_4","RedPlatform125_5","RedPlatform125_6","RedPlatform125_7","RedPlatform125_8","RedPlatform125_9","RedPlatform125_10","RedPlatform125_11","RedPlatform125_12","RedPlatform125_13","RedPlatform125_14","RedPlatform125_15","RedPlatform125_16","Field_Tape_Blue","Field_Tape_Red","onClick","clicked","stopPropagation","name","point","attach","args","TiP_Lines_1","TiP_Lines_2","scale","Tipping_Point_Game_Element","Tipping_Point_Game_Elements319","Tipping_Point_Game_Elements321","Tipping_Point_Game_Elements323","Tipping_Point_Game_Elements325","Tipping_Point_Game_Elements327","Tipping_Point_Game_Elements329","Tipping_Point_Game_Elements331","Tipping_Point_Game_Elements333","Tipping_Point_Game_Elements335","Tipping_Point_Game_Elements337","Tipping_Point_Game_Elements339","Tipping_Point_Game_Elements341","Tipping_Point_Game_Elements343","Tipping_Point_Game_Elements345","Tipping_Point_Game_Elements347","Tipping_Point_Game_Elements349","Tipping_Point_Game_Elements351","Tipping_Point_Game_Elements353","Tipping_Point_Game_Elements355","Tipping_Point_Game_Elements357","Tipping_Point_Game_Elements359","Tipping_Point_Game_Elements361","Tipping_Point_Game_Elements363","Tipping_Point_Game_Elements365","Tipping_Point_Game_Elements367","Tipping_Point_Game_Elements369","Tipping_Point_Game_Elements371","Tipping_Point_Game_Elements373","Tipping_Point_Game_Elements375","Tipping_Point_Game_Elements377","Tipping_Point_Game_Elements379","Tipping_Point_Game_Elements381","Tipping_Point_Game_Elements383","Tipping_Point_Game_Elements385","Tipping_Point_Game_Elements387","Tipping_Point_Game_Elements389","Tipping_Point_Game_Elements391","Tipping_Point_Game_Elements393","Tipping_Point_Game_Elements395","Tipping_Point_Game_Elements397","Tipping_Point_Game_Elements399","TiP_Inches1274","TiP_Inches1274_1","TiP_Inches1274_2","TiP_Inches1274_3","TiP_Inches1274_4","TiP_Inches1274_5","TiP_Inches1274_6","TiP_Inches1274_7","TiP_Inches1274_8","TiP_Inches1275","TiP_Inches1275_1","TiP_Inches1275_2","TiP_Inches1275_3","TiP_Inches1275_4","TiP_Inches1275_5","TiP_Inches1275_6","TiP_Inches1275_7","TiP_Inches1275_8","TiP_Inches1273","TiP_Inches1273_1","TiP_Inches1273_2","TiP_Inches1273_3","TiP_Inches1273_4","TiP_Inches1273_5","TiP_Inches1273_6","TiP_Inches1273_7","TiP_Inches1273_8","TiP_Inches1273_9","TiP_Inches1273_10","TiP_Inches1273_11","TiP_Inches1098","TiP_Inches1098_1","TiP_Inches1098_2","TiP_Inches1098_3","TiP_Inches1098_4","TiP_Inches1098_5","TiP_Inches1098_6","TiP_Inches1098_7","TiP_Inches1098_8","TiP_Inches1098_9","TiP_Inches1098_10","TiP_Inches1098_11","TiP_Inches1238","TiP_Inches1238_1","TiP_Inches1238_2","TiP_Inches1238_3","TiP_Inches1238_4","TiP_Inches1238_5","TiP_Inches1238_6","TiP_Inches1238_7","TiP_Inches1238_8","TiP_Inches1238_9","TiP_Inches1238_10","TiP_Inches1238_11","TiP_Inches1194","TiP_Inches1194_1","TiP_Inches1194_2","TiP_Inches1194_3","TiP_Inches1194_4","TiP_Inches1194_5","TiP_Inches1194_6","TiP_Inches1194_7","TiP_Inches1194_8","TiP_Inches1162","TiP_Inches1162_1","TiP_Inches1162_2","TiP_Inches1162_3","TiP_Inches1162_4","TiP_Inches1162_5","TiP_Inches1162_6","TiP_Inches1162_7","TiP_Inches1162_8","preload","userDataParent","EventsControls","camera","domElement","_this","this","container","undefined","document","containerWidth","width","containerHeight","height","_DisplaceFocused","focused","focusedChild","previous","_DisplacemouseOvered","mouseOvered","mouseOveredChild","raycaster","map","event","offset","offsetUse","_altUsed","_mouse","mouse","_vector","_direction","collidableEntities","enabled","objects","_DisplaceIntersects","_DisplaceIntersectsMap","intersects","intersectsMap","update","onContainerMouseMove","_mouseMoveFlag","mouseMove","dragAndDrop","mouseOver","mouseOut","mouseUp","onclick","object","push","i","children","length","detach","item","indexOf","splice","_mouseOverFlag","_dragAndDropFlag","_onclickFlag","_raySet","intersectObject","pos","copy","sub","err","intersectObjects","select","deselect","attachEvent","handler","detachEvent","setFocus","removeFocus","returnPrevious","x","y","unproject","transformDirection","matrixWorld","vector","normalize","_setMap","addEventListener","altKey","subVectors","passive","capture","offsetX","layerX","offsetY","layerY","changedTouches","getTouchPos2","gridTileVertex","String","raw","gridTileFragment","Node","dragging","index","selected","setSelect","setDragging","useCreateStore","S","useThree","gl","mesh","React","useState","hovered","setHover","billboard","useControls","getMeshPos","currentPos","current","z","eventControls","altUsed","round","Billboard","meshPos","getBillboardPos","follow","Text","fontSize","maxWidth","lineHeight","outlineBlur","outlineColor","textAlign","anchorX","anchorY","_event","CubicHermiteSpline","points","tangents","count","interpolatedPoints","increment","getPointAtTime","t","p0","p1","v0","v1","t2","t3","_2t3","_3t2","a","b","c","d","NodeConnection","startMarker","endMarker","startPos","endPos","vectors","setVectors","v0Mesh","v1Mesh","vectorRef","divideScalar","add","velocityScalarFunc","val","curve","M","getPoints","setFromPoints","v","v0Geometry","v1Geometry","straightLineGeometry","slice","filter","_element","atan2","UIManager","setMarkerMode","setUiStore","shallow","button","selection","setSelection","OrbitControls","Stats","UI","importButton","waypointButton","buttonSelected","setButtonSelected","importString","hideGameElements","onChange","style","right","top","className","parsedNodes","JSON","parse","importProject","backgroundColor","stringify","fill","flat","titleBar","intersectionsFilter","intersections","App","ui","tiles","setTiles","sphereGeometry","backgroundTexture","load","sphereMaterial","shadows","shadowMapEnabled","shadowMapType","antialias","pixelRatio","window","devicePixelRatio","fov","intensity","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e714fe8d.chunk.js","sourcesContent":["import * as THREE from 'three'\n\nexport const redMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(0,87%,46%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const blueMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(240,87%,46%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const lightGrayMat = new THREE.MeshStandardMaterial({\n    color: \"#9f9b92\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const tileMat = new THREE.MeshStandardMaterial({\n    color: \"#909090\",\n    metalness: 0.5,\n    roughness: 1.0\n})\n\n\nexport const grayMat = new THREE.MeshStandardMaterial({\n    color: \"#4a4c4d\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const yellowMat = new THREE.MeshStandardMaterial({\n    color: \"#ffd900\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const purpleMat = new THREE.MeshStandardMaterial({\n    color: \"#661c9d\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\nexport const platformMat = new THREE.MeshLambertMaterial({\n    color: 0xededed,\n    transparent: true,\n    opacity: 0.4,\n    wireframe: false,\n    side: THREE.DoubleSide,\n})\n\nexport const transparentMat = new THREE.MeshLambertMaterial({\n    color: 0x000000,\n    transparent: true,\n    opacity: 0.2,\n    wireframe: false,\n    side: THREE.DoubleSide,\n    vertexColors: true,\n})\n\nconst tileGridUniforms = {\n    // Resolution of the grid\n    // .335 - exact resolution for 6x6 grid\n    resolution: { value: .335 }\n}\n\nexport const shadowMat = new THREE.MeshStandardMaterial({\n    color: \"hsl(0,0%,85%)\",\n    metalness: 0.5,\n    roughness: 1,\n});\n\n\nexport const tileGridMat = (fragmentShader, vertexShader) => new THREE.ShaderMaterial({\n    side: THREE.FrontSide,\n    uniforms: tileGridUniforms,\n    fragmentShader: fragmentShader,\n    vertexShader: vertexShader\n})\n\n\n","import create from 'zustand'\nimport produce from 'immer'\n\nexport const useNodeStore = create(set => ({\n    nodes: [],\n    setNodeState: (fn) => set(produce(fn)),\n    addNode: (node) => {set(state => ({ nodes: [...state.nodes, node] })); console.log(\"Setting node\")}\n}))","import create from 'zustand'\n\nexport const useModelStore = create(set => ({\n    model: null,\n    setModel: (model) => {set(({ model: model })); console.log(\"Setting model\")}\n}))","import create from \"zustand\"\n\nexport const useUiLevaStore = create(set => ({\n    currentNodeStore: null,\n    markerMode: false,\n    hideFieldElements: true,\n    showRobotVisualization: true,\n    toggleMarkerMode: () => set(state => ({ markerMode: !state.markerMode })),\n    toggleFieldElements: (store) => set((state) => ({ hideFieldElements: !state.hideFieldElements })),\n    setStore: (store) => set(() => ({ currentNodeStore: store }))\n}))","import { useEffect, useRef } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport { shadowMat, blueMat, grayMat, lightGrayMat, platformMat, purpleMat, redMat, tileMat, yellowMat, transparentMat } from './materials';\nimport { useNodeStore } from '../stores/NodeStore';\nimport { useModelStore } from '../stores/ModelStore';\nimport { useUiLevaStore } from '../stores/UILevaStore';\n\nexport default function Model(props) {\n  const addNode = useNodeStore(state => state.addNode);\n\n  const tileMesh = useRef(null);\n  const rings = useRef(null);\n\n  const setModel = useModelStore(state => state.setModel)\n\n  const markerMode = useUiLevaStore(state => state.markerMode);\n  const hideTiles = useUiLevaStore(state => state.hideFieldElements);\n\n  const onFieldTileClick = (clicked) => {\n    clicked.stopPropagation();\n\n    if (markerMode) {\n      addNode({ name: \"Waypoint\", position: clicked.point });\n    }\n    // props.ui({name: \"Waypoint\", position: clicked.point});\n  }\n\n  const group = useRef()\n  const { nodes } = useGLTF(process.env.PUBLIC_URL + '/fieldmodel.gltf')\n\n  const lexanWallPanels = [\n    nodes.Perimeter_Lexan_Wall_Panel000,\n    nodes.Perimeter_Lexan_Wall_Panel001,\n    nodes.Perimeter_Lexan_Wall_Panel002,\n    nodes.Perimeter_Lexan_Wall_Panel003,\n    nodes.Perimeter_Lexan_Wall_Panel004,\n    nodes.Perimeter_Lexan_Wall_Panel005,\n    nodes.Perimeter_Lexan_Wall_Panel006,\n    nodes.Perimeter_Lexan_Wall_Panel007,\n    nodes.Perimeter_Lexan_Wall_Panel008,\n    nodes.Perimeter_Lexan_Wall_Panel009,\n    nodes.Perimeter_Lexan_Wall_Panel010,\n    nodes.Perimeter_Lexan_Wall_Panel011\n  ]\n\n  // Because GLTF imports a non-transparent material, replace it with our own\n  lexanWallPanels.forEach((tile) => {\n    tile.material = transparentMat\n  })\n\n  useEffect(() => {\n    // The UIManager needs to have a reference to the tile model\n\n    setModel(tileMesh);\n\n    // if (props.tiles === null && tileMesh.current !== null) {\n    //   props.setTiles(tileMesh);\n    // }\n  })\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      <group position={[0, 0, 0]} rotation={[Math.PI / 2, 0, Math.PI]}>\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_1.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_2.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_3.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_4.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_5.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_6.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_7.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_8.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_9.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_10.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_11.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform159_12.geometry} material={grayMat} />\n        <group position={[-58.48, 2.5, -7.19]} rotation={[-Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow\n            geometry={nodes.Platform_Pivot_Bar001.geometry}\n            material={grayMat}\n            position={[58.48, -7.19, -2.5]}\n            rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-58.48, -2.5, -7.19]} rotation={[-1.96, 0, 0]}>\n              <group position={[58.48, -7.6, -0.37]} rotation={[1.95, 0, 0]}>\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_1.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_2.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_3.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_4.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_5.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_6.geometry} material={blueMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_7.geometry} material={blueMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_8.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_9.geometry} material={lightGrayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_10.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_11.geometry} material={platformMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_12.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_13.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_14.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_15.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform161_16.geometry} material={grayMat} />\n              </group>\n            </group>\n          </mesh>\n        </group>\n      </group>\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_1.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_2.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_3.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_4.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_5.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_6.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_7.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_8.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_9.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_10.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_11.geometry} material={grayMat} />\n        <mesh castShadow receiveShadow geometry={nodes.RedPlatform_12.geometry} material={grayMat} />\n        <group position={[-58.48, 2.5, -7.19]} rotation={[-Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow\n            geometry={nodes.Platform_Pivot_Bar.geometry}\n            material={grayMat}\n            position={[58.48, -7.19, -2.5]}\n            rotation={[Math.PI / 2, 0, 0]}>\n            <group position={[-58.48, -2.5, -7.19]} rotation={[-1.96, 0, 0]}>\n              <group position={[58.48, -7.6, -0.37]} rotation={[1.95, 0, 0]}>\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_1.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_2.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_3.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_4.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_5.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_6.geometry} material={redMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_7.geometry} material={redMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_8.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_9.geometry} material={lightGrayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_10.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_11.geometry} material={platformMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_12.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_13.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_14.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_15.geometry} material={grayMat} />\n                <mesh castShadow receiveShadow geometry={nodes.RedPlatform125_16.geometry} material={grayMat} />\n              </group>\n            </group>\n          </mesh>\n        </group>\n      </group>\n      <mesh\n        geometry={nodes.Field_Tape_Blue.geometry}\n        material={blueMat}\n        position={[0, 0, 0]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh\n        geometry={nodes.Field_Tape_Red.geometry}\n        material={redMat}\n        position={[0, 0, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        rotation={[Math.PI / 2, 0, 0]}\n        onClick={onFieldTileClick}\n        ref={tileMesh}\n        position={[0, -0.5, 0]}\n        material={tileMat}\n      >\n        <boxGeometry attach=\"geometry\" args={[143, 143, 1]} />\n      </mesh>\n\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel000.geometry}\n        position={[46.84, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel001.geometry}\n        position={[0, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel002.geometry}\n        position={[-46.84, 5.75, -70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel003.geometry}\n        position={[70.47, 5.75, 46.84]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel004.geometry}\n        position={[70.47, 5.75, 0]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel005.geometry}\n        position={[70.47, 5.75, -46.84]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel006.geometry}\n        position={[-46.84, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel007.geometry}\n        position={[0, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel008.geometry}\n        position={[46.84, 5.75, 70.47]}\n        material={transparentMat}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel009.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, -46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel010.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, 0]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes.Perimeter_Lexan_Wall_Panel011.geometry}\n        material={transparentMat}\n        position={[-70.47, 5.75, 46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket000'].geometry}\n        material={grayMat}\n        position={[69.56, 11.55, -69.56]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket001'].geometry}\n        material={grayMat}\n        position={[69.56, 11.55, 69.57]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket002'].geometry}\n        material={grayMat}\n        position={[-69.56, 11.55, 69.56]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Bracket003'].geometry}\n        material={grayMat}\n        position={[-69.56, 11.55, -69.57]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset000'].geometry}\n        material={grayMat}\n        position={[70.55, 5.75, -70.55]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset001'].geometry}\n        material={grayMat}\n        position={[70.55, 5.75, 70.56]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset002'].geometry}\n        material={grayMat}\n        position={[-70.55, 5.75, 70.55]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Corner_Gusset003'].geometry}\n        material={grayMat}\n        position={[-70.55, 5.75, -70.56]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset000'].geometry}\n        material={grayMat}\n        position={[23.42, 11.42, -70.92]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset002'].geometry}\n        material={grayMat}\n        position={[-23.42, 11.42, -70.92]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset004'].geometry}\n        material={grayMat}\n        position={[70.92, 11.42, 23.43]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset006'].geometry}\n        material={grayMat}\n        position={[70.92, 11.42, -23.42]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset008'].geometry}\n        material={grayMat}\n        position={[-23.42, 11.42, 70.92]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset010'].geometry}\n        material={grayMat}\n        position={[23.42, 11.42, 70.92]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset012'].geometry}\n        material={grayMat}\n        position={[-70.92, 11.42, -23.43]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset014'].geometry}\n        material={grayMat}\n        position={[-70.92, 11.42, 23.42]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset001'].geometry}\n        material={grayMat}\n        position={[23.42, 0.08, -70.92]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset003'].geometry}\n        material={grayMat}\n        position={[-23.42, 0.08, -70.92]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset005'].geometry}\n        material={grayMat}\n        position={[70.92, 0.08, 23.43]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset007'].geometry}\n        material={grayMat}\n        position={[70.92, 0.08, -23.42]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset009'].geometry}\n        material={grayMat}\n        position={[-23.42, 0.08, 70.92]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset011'].geometry}\n        material={grayMat}\n        position={[23.42, 0.08, 70.92]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset013'].geometry}\n        material={grayMat}\n        position={[-70.92, 0.08, -23.43]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Gusset015'].geometry}\n        material={grayMat}\n        position={[-70.92, 0.08, 23.42]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component000'].geometry}\n        material={grayMat}\n        position={[46.84, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component001'].geometry}\n        material={grayMat}\n        position={[46.84, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component002'].geometry}\n        material={grayMat}\n        position={[0, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component003'].geometry}\n        material={grayMat}\n        position={[0, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component004'].geometry}\n        material={grayMat}\n        position={[-46.84, 10.55, -70.47]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component005'].geometry}\n        material={grayMat}\n        position={[-46.84, 0.95, -70.47]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component006'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, 46.84]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component007'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, 46.84]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component008'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, 0]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component009'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, 0]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component010'].geometry}\n        material={grayMat}\n        position={[70.47, 10.55, -46.84]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component011'].geometry}\n        material={grayMat}\n        position={[70.47, 0.95, -46.84]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component012'].geometry}\n        material={grayMat}\n        position={[-46.84, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component013'].geometry}\n        material={grayMat}\n        position={[-46.84, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component014'].geometry}\n        material={grayMat}\n        position={[0, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component015'].geometry}\n        material={grayMat}\n        position={[0, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component016'].geometry}\n        material={grayMat}\n        position={[46.84, 10.55, 70.47]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component017'].geometry}\n        material={grayMat}\n        position={[46.84, 0.95, 70.47]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component018'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, -46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component019'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, -46.84]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component020'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, 0]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component021'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, 0]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component022'].geometry}\n        material={grayMat}\n        position={[-70.47, 10.55, 46.84]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Horizantal_Component023'].geometry}\n        material={grayMat}\n        position={[-70.47, 0.95, 46.84]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component000'].geometry}\n        material={grayMat}\n        position={[24.35, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component001'].geometry}\n        material={grayMat}\n        position={[69.33, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component002'].geometry}\n        material={grayMat}\n        position={[-24.35, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component003'].geometry}\n        material={grayMat}\n        position={[-22.49, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component004'].geometry}\n        material={grayMat}\n        position={[22.49, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component005'].geometry}\n        material={grayMat}\n        position={[-69.33, 5.75, -70.51]}\n        rotation={[Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component006'].geometry}\n        material={grayMat}\n        position={[-24.36, 5.75, -70.51]}\n        rotation={[-Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component007'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 24.36]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component008'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 69.33]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component009'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -22.48]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component010'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, 22.49]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component011'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -69.33]}\n        rotation={[Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component012'].geometry}\n        material={grayMat}\n        position={[70.51, 5.75, -24.35]}\n        rotation={[-Math.PI / 2, 0, Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component013'].geometry}\n        material={grayMat}\n        position={[-69.33, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component014'].geometry}\n        material={grayMat}\n        position={[22.49, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component015'].geometry}\n        material={grayMat}\n        position={[-22.49, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component016'].geometry}\n        material={grayMat}\n        position={[69.33, 5.75, 70.51]}\n        rotation={[Math.PI / 2, 0, Math.PI]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component017'].geometry}\n        material={grayMat}\n        position={[24.36, 5.75, 70.51]}\n        rotation={[-Math.PI / 2, 0, 0]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component018'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -24.36]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component019'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -69.33]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component020'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 22.48]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component021'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, -22.49]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component022'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 69.33]}\n        rotation={[Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <mesh castShadow receiveShadow\n        geometry={nodes['Perimeter_Sheet-Metal_Vertical_Component023'].geometry}\n        material={grayMat}\n        position={[-70.51, 5.75, 24.35]}\n        rotation={[-Math.PI / 2, 0, -Math.PI / 2]}\n      />\n      <group rotation={[Math.PI / 2, 0, 0]}>\n        <mesh geometry={nodes.TiP_Lines_1.geometry} material={shadowMat} />\n        <mesh geometry={nodes.TiP_Lines_2.geometry} material={shadowMat} />\n      </group>\n      <group ref={rings} scale={hideTiles ? 0 : 1}>\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Element.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements319.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements321.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements323.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements325.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements327.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements329.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements331.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements333.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements335.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements337.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements339.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements341.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements343.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements345.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements347.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements349.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements351.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements353.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements355.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements357.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements359.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements361.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements363.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements365.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements367.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements369.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements371.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements373.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements375.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements377.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements379.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements381.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements383.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements385.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements387.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements389.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements391.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements393.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements395.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements397.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n        <mesh castShadow receiveShadow\n          geometry={nodes.Tipping_Point_Game_Elements399.geometry}\n          material={purpleMat}\n          rotation={[Math.PI / 2, 0, 0]}\n        />\n      </group>\n      <group scale={hideTiles ? 0 : 1}>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1274_8.geometry} material={blueMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1275_8.geometry} material={blueMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1273_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1098_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_4.geometry} material={yellowMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_7.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_8.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_9.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_10.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1238_11.geometry} material={grayMat} />\n        </group>\n        <group rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_7.geometry} material={redMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1194_8.geometry} material={grayMat} />\n        </group>\n        <group name=\"\" rotation={[Math.PI / 2, 0, 0]}>\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_1.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_2.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_3.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_4.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_5.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_6.geometry} material={grayMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_7.geometry} material={redMat} />\n          <mesh castShadow receiveShadow geometry={nodes.TiP_Inches1162_8.geometry} material={grayMat} />\n        </group>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(process.env.PUBLIC_URL + '/fieldmodel.gltf')\n","/* eslint-disable no-unused-vars */\n/** This EventsControls will allow to facilitate development speed for simple manipulations by means of a mouse\n* - point and click, drag and drop.\n* @author Vildanov Almaz / alvild@gmail.com\n* R18 version 10.10.2015.\n*/\n\n// intersects = raycaster.intersectObjects( objects );\n// =>\n// intersects[ 0 ].object = this.focused\n//     OR\n// intersects[ 0 ].object = this.mouseOvered\n// this.event = intersects[ 0 ];\n// this.event.item - number of the selected object\n// this.event.distance - distance between the origin of the ray and the intersection\n// this.event.point - point of intersection, in world coordinates\n// this.event.face - intersected face\n// this.event.faceIndex - index of the intersected face\n// this.event.indices - indices of vertices comprising the intersected face\n\nimport * as THREE from 'three'\n\n\nTHREE.Object3D.userDataParent = null;\nTHREE.Mesh.userDataParent = null;\n\nexport const EventsControls = function (camera, domElement) {\n\n\tvar _this = this;\n\n\tthis.camera = camera;\n\tthis.container = (domElement !== undefined) ? domElement : document;\n\n\tthis.containerWidth = this.container.width;\n\tthis.containerHeight = this.container.height;\n\n\tvar _DisplaceFocused = null; // выделенный объект\n\tthis.focused = null; // выделенный объект\n\tthis.focusedChild = null; // выделенная часть 3D объекта\n\tthis.previous = new THREE.Vector3(); // предыдущие координаты выделенного объекта\n\tvar _DisplacemouseOvered = null; // наведенный объект\t\n\tthis.mouseOvered = null; // наведенный объект\n\tthis.mouseOveredChild = null; // наведенная часть 3D объекта\t\n\n\tthis.raycaster = new THREE.Raycaster();\n\n\tthis.map = null;\n\tthis.event = null;\n\tthis.offset = new THREE.Vector3();\n\tthis.offsetUse = false;\n\t\n\tthis._altUsed = false;\n\n\tthis._mouse = new THREE.Vector2();\n\tthis.mouse = new THREE.Vector2();\n\tthis._vector = new THREE.Vector3();\n\tthis._direction = new THREE.Vector3();\n\n\tvar _collidable = false;\n\tthis.collidableEntities = [];\n\n\n\t// API\n\n\tthis.enabled = true;\n\n\tthis.objects = [];\n\tvar _DisplaceIntersects = [];\n\tvar _DisplaceIntersectsMap = [];\n\tthis.intersects = [];\n\tthis.intersectsMap = [];\n\n\tthis.update = function () {\n\t\tif (_this.enabled) {\n\t\t\tonContainerMouseMove();\n\t\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t\t}\n\t}\n\n\tthis.dragAndDrop = function () { } // example: this.container.style.cursor = 'move'; \n\tthis.mouseOver = function () { } // example: this.container.style.cursor = 'pointer';\n\tthis.mouseOut = function () { } // example: this.container.style.cursor = 'auto';\n\tthis.mouseUp = function () { } // example: this.container.style.cursor = 'auto';\n\tthis.mouseMove = function () { }\n\tthis.onclick = function () { }\n\n\tthis.attach = function (object) {\n\n\t\tif (object instanceof THREE.Mesh) {\n\t\t\tthis.objects.push(object);\n\t\t}\n\t\telse {\n\n\t\t\tthis.objects.push(object);\n\n\t\t\tfor (var i = 0; i < object.children.length; i++) {\n\t\t\t\tobject.children[i].userDataParent = object;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tthis.detach = function (object) {\n\n\t\tvar item = _this.objects.indexOf(object);\n\t\tthis.objects.splice(item, 1);\n\n\t}\n\n\tvar _mouseOverFlag = false;\n\tvar _mouseOutFlag = false;\n\tvar _dragAndDropFlag = false;\n\tvar _mouseUpFlag = false;\n\tvar _onclickFlag = false;\n\tvar _mouseMoveFlag = false;\n\n\tthis.attachEvent = function (event, handler) {\n\n\t\tswitch (event) {\n\t\t\tcase 'mouseOver': this.mouseOver = handler; _mouseOverFlag = true; break;\n\t\t\tcase 'mouseOut': this.mouseOut = handler; _mouseOutFlag = true; break;\n\t\t\tcase 'dragAndDrop': this.dragAndDrop = handler; _dragAndDropFlag = true; break;\n\t\t\tcase 'mouseUp': this.mouseUp = handler; _mouseUpFlag = true; break;\n\t\t\tcase 'onclick': this.onclick = handler; _onclickFlag = true; break;\n\t\t\tcase 'mouseMove': this.mouseMove = handler; _mouseMoveFlag = true; break;\n\t\t\tdefault: break;;\n\t\t}\n\n\t}\n\n\tthis.detachEvent = function (event) {\n\n\t\tswitch (event) {\n\t\t\tcase 'mouseOver': _mouseOverFlag = false; break;\n\t\t\tcase 'mouseOut': _mouseOutFlag = false; break;\n\t\t\tcase 'dragAndDrop': _dragAndDropFlag = false; break;\n\t\t\tcase 'mouseUp': _mouseUpFlag = false; break;\n\t\t\tcase 'onclick': _onclickFlag = false; break;\n\t\t\tcase 'mouseMove': _mouseMoveFlag = false; break;\n\t\t\tdefault: break;\n\t\t}\n\n\t}\n\n\tthis.setFocus = function (object) {\n\n\t\t_DisplaceFocused = object;\n\t\t_this.event.item = _this.objects.indexOf(object);\n\n\t\tif (object.userDataParent) {\n\t\t\tthis.focused = object.userDataParent;\n\t\t\tthis.focusedChild = _DisplaceFocused;\n\t\t\tthis.previous.copy(this.focused.position);\n\t\t}\n\t\telse {\n\t\t\tthis.focused = object; this.focusedChild = null;\n\t\t\tthis.previous.copy(this.focused.position);\n\t\t}\n\n\t}\n\n\tthis.removeFocus = function () {\n\n\t\t_DisplaceFocused = null;\n\t\tthis.focused = null;\n\t\tthis.focusedChild = null;\n\t\tthis.event = null;\n\n\t}\n\n\tthis.select = function (object) {\n\n\t\t_DisplacemouseOvered = object;\n\t\t_this.event.item = _this.objects.indexOf(object);\n\t\tif (object.userDataParent) {\n\t\t\tthis.mouseOvered = object.userDataParent;\n\t\t\tthis.mouseOveredChild = _DisplacemouseOvered;\n\t\t}\n\t\telse {\n\t\t\tthis.mouseOvered = object; this.mouseOveredChild = null;\n\t\t}\n\n\t}\n\n\tthis.deselect = function () {\n\n\t\t_DisplacemouseOvered = null;\n\t\tthis.mouseOvered = null;\n\t\tthis.mouseOveredChild = null;\n\t\tthis.event = null;\n\n\t}\n\n\tthis.returnPrevious = function () {\n\n\t\t_this.focused.position.copy(this.previous);\n\n\t}\n\n\tthis._raySet = function () {\n\n\t\tif (_this.camera instanceof THREE.OrthographicCamera) {\n\n\t\t\t_this._vector.set(_this._mouse.x, _this._mouse.y, - 1).unproject(_this.camera);\n\t\t\t_this._direction.set(0, 0, -1).transformDirection(_this.camera.matrixWorld);\n\t\t\t_this.raycaster.set(_this._vector, _this._direction);\n\n\t\t}\n\t\telse {\n\n\t\t\tvar vector = new THREE.Vector3(_this._mouse.x, _this._mouse.y, 1);\n\t\t\t//_this._projector.unprojectVector( vector, camera ); \n\t\t\tvector.unproject(_this.camera);\n\t\t\t//\t_this.raycaster = new THREE.Raycaster( _this.camera.position, vector.sub( _this.camera.position ).normalize() );\n\t\t\t_this.raycaster.set(_this.camera.position, vector.sub(_this.camera.position).normalize());\n\n\t\t}\n\n\t}\n\n\tthis._setMap = function () {\n\n\t\t_this.intersectsMap = _DisplaceIntersectsMap;\n\n\t}\n\n\tfunction getMousePos(event) {\n\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t_this._mouse.x = ((x) / _this.container.width) * 2 - 1;\n\t\t_this._mouse.y = - ((y) / _this.container.height) * 2 + 1;\n\n\t\tonContainerMouseMove();\n\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t}\n\n\tfunction getTouchPos(event) {\n\t\tif (_this.enabled) {\n\t\t\tevent = event.changedTouches[0];\n\t\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t\t_this._mouse.x = (x / _this.containerWidth) * 2 - 1;\n\t\t\t_this._mouse.y = - (y / _this.containerHeight) * 2 + 1;\n\n\t\t\tonContainerMouseMove();\n\t\t\tif (_mouseMoveFlag) _this.mouseMove();\n\t\t}\n\t}\n\n\tfunction getTouchPos2(event) {\n\t\tif (_this.enabled) {\n\t\t\tevent = event.changedTouches[0];\n\t\t\tvar x = event.offsetX === undefined ? event.layerX : event.offsetX;\n\t\t\tvar y = event.offsetY === undefined ? event.layerY : event.offsetY;\n\n\t\t\t_this._mouse.x = ((x) / _this.containerWidth) * 2 - 1;\n\t\t\t_this._mouse.y = - ((y) / _this.containerHeight) * 2 + 1;\n\n\t\t}\n\t}\n\n\tfunction onContainerMouseDown(event) {\n\n\t\tif (_this.enabled && (_onclickFlag || _dragAndDropFlag)) {\n\t\t\tif (_this.focused) { return; }\n\t\t\tif (event.altKey) _this._altUsed = true;\n\t\t\t\n\t\t\t_this._raySet();\n\t\t\t_this.intersects = _this.raycaster.intersectObjects(_this.objects, true);\n\n\t\t\tif (_this.intersects.length > 0) {\n\n\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t_this.setFocus(_this.intersects[0].object);\n\n\t\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t\t_this.intersects = _this.raycaster.intersectObject(_this.map);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (_this.offsetUse) {\n\t\t\t\t\t\t\tvar pos = new THREE.Vector3().copy(_this.focused.position);\n\t\t\t\t\t\t\t_this.offset.subVectors(_this.intersects[0].point, pos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//_this.offset.copy( _this.intersects[ 0 ].point ).sub( _this.map.position );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) { }\n\n\t\t\t\t}\n\n\t\t\t\t_this.onclick(event);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_this.removeFocus(); _this.event = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerTouchDown(event) {\n\n\t\tevent = event.changedTouches[0];\n\t\tgetTouchPos2(event);\n\t\tif (_this.enabled && (_onclickFlag || _dragAndDropFlag)) {\n\t\t\tif (_this.focused) { return; }\n\t\t\t_this._raySet();\n\t\t\t_this.intersects = _this.raycaster.intersectObjects(_this.objects, true);\n\n\t\t\tif (_this.intersects.length > 0) {\n\n\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t_this.setFocus(_this.intersects[0].object);\n\n\t\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t\t_this.intersects = _this.raycaster.intersectObject(_this.map);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tif (_this.offsetUse) {\n\t\t\t\t\t\t\tvar pos = new THREE.Vector3().copy(_this.focused.position);\n\t\t\t\t\t\t\t_this.offset.subVectors(_this.intersects[0].point, pos);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//_this.offset.copy( _this.intersects[ 0 ].point ).sub( _this.map.position );\n\t\t\t\t\t}\n\t\t\t\t\tcatch (err) { }\n\n\t\t\t\t}\n\n\t\t\t\t_this.onclick(event);\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_this.removeFocus(); _this.event = null;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerMouseMove() {\n\n\t\t_this._raySet();\n\n\t\tif (_this.focused) {\n\n\t\t\tif (_dragAndDropFlag) {\n\t\t\t\t// _DisplaceIntersectsMap = _this.raycaster.intersectObject(_this.objects)\n\t\t\t\t_DisplaceIntersectsMap = _this.raycaster.intersectObject(_this.map);\n\t\t\t\t//_this._setMap();\n\t\t\t\ttry {\n\n\t\t\t\t\tvar pos = new THREE.Vector3().copy(_DisplaceIntersectsMap[0].point.sub(_this.offset));\n\n\t\t\t\t\t_this.focused.position.copy(pos);\n\t\t\t\t}\n\t\t\t\tcatch (err) { }\n\n\t\t\t\t_this.dragAndDrop(_this._altUsed);\n\t\t\t}\n\t\t}\n\t\telse {\n\n\t\t\tif (_mouseOverFlag) {\n\n\t\t\t\t_DisplaceIntersects = _this.raycaster.intersectObjects(_this.objects, true);\n\t\t\t\t_this.intersects = _DisplaceIntersects;\n\t\t\t\tif (_this.intersects.length > 0) {\n\t\t\t\t\t_this.event = _this.intersects[0];\n\t\t\t\t\tif (_this.mouseOvered) {\n\t\t\t\t\t\tif (_DisplacemouseOvered !== _this.intersects[0].object) {\n\t\t\t\t\t\t\t_this.mouseOut();\n\t\t\t\t\t\t\t_this.select(_this.intersects[0].object);\n\t\t\t\t\t\t\t_this.mouseOver();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t_this.select(_this.intersects[0].object);\n\t\t\t\t\t\t_this.mouseOver();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (_DisplacemouseOvered) { _this.mouseOut(); _this.deselect(); }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onContainerMouseUp(event) {\n\n\t\tif (_this.enabled) {\n\t\t\tif (_this.focused) {\n\n\t\t\t\t_this._altUsed = false;\n\t\t\t\t_this.mouseUp();\n\t\t\t\t_DisplaceFocused = null;\n\t\t\t\t_this.focused = null;\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\n\tthis.container.addEventListener('mousedown', onContainerMouseDown, {passive: true, capture: true});\t// мышка нажата\n\tthis.container.addEventListener('mousemove', getMousePos, {passive: true, capture: true});   // получение координат мыши\n\tthis.container.addEventListener('mouseup', onContainerMouseUp, {passive: true, capture: true});       // мышка отпущена\n\tthis.container.addEventListener('touchstart', onContainerTouchDown, {passive: true, capture: true});\n\tthis.container.addEventListener('touchmove', getTouchPos, {passive: true, capture: true});\n\n};\n","export const gridTileVertex = String.raw`\nattribute vec3 in_Position;\nvarying vec2 fragCoord;\nvarying vec2 vUv; \nvoid main()\n{\n    vUv = uv;\n    vec4 mvPosition = modelViewMatrix * vec4(position, 1.0 );\n    gl_Position = projectionMatrix * mvPosition;\n    fragCoord = position.xy;\n}`;\n\nexport const gridTileFragment = String.raw`\nprecision highp float;\nprecision highp int;\nuniform float resolution;\nvarying vec2 vUv;\nfloat smoothgrid(float spacing, float thickness, float alpha, vec2 position)\n{\n  vec2 posrep = mod(position, vec2(spacing)) - .5 * thickness;\n  vec2 lines = alpha * max(vec2(0.0), min(thickness + posrep, thickness - posrep) / thickness);\n  return max(lines.x, lines.y);\n}\nvoid main()\n{\n  vec2 uv = (vUv.xy) / resolution;\n  vec3 blue = vec3(0.34, 0.34, 0.34);\n  vec2 spacing = vec2(.496, 0.248);\n  vec2 thickness = vec2(0.01, 0.015);\n  vec2 alpha = vec2(0.9, 0.5);\n  float thick_lines = smoothgrid(spacing.s, thickness.s, alpha.s, uv);\n  float thin_lines = smoothgrid(spacing.t, thickness.t, alpha.t, uv);\n  float erasure = 0.1;\n  vec4 background = vec4(0);\n  vec3 paper = max(blue, 0.35 * length(background.rgb));\n  vec3 color = vec3(max(paper, sqrt(erasure * background.b + (1. - erasure)) * max(thick_lines, thin_lines)));\n  gl_FragColor = vec4(color, 1.0);\n}    \n`;","import { useControls, useCreateStore } from \"leva\";\nimport React from \"react\";\nimport { useEffect, useRef } from \"react\";\nimport { Text, Billboard } from \"@react-three/drei\"\nimport { useThree } from \"@react-three/fiber\"\nimport { EventsControls } from \"../controls/EventsControls\";\nimport { tileMat, tileGridMat } from \"../models/materials\";\nimport { useNodeStore } from \"../stores/NodeStore\";\nimport * as S from \"../models/shaders\";\n\nexport default function Node({ dragging, node, index, selected, setSelect, setDragging, model }) {\n    const store = useCreateStore();\n\n    const vertexShader = S.gridTileVertex;\n    const fragmentShader = S.gridTileFragment;\n\n    const setNodeState = useNodeStore(state => state.setNodeState);\n\n    const { gl, camera } = useThree();\n\n    const mesh = useRef(null)\n    const [hovered, setHover] = React.useState(false)\n\n    const billboard = useRef(null);\n\n    let [{ name }, set] = useControls(\n        () => ({\n            name: \"Waypoint\",\n            position: [0, 0, 0]\n        }),\n        { store }\n    )\n\n    useEffect(() => {\n        setSelect([index, store])\n\n        if (mesh.current !== null && model !== null) {\n\n            set({ position: [node.position.x, node.position.y, node.position.z], name: node.name })\n\n            const eventControls = new EventsControls(camera, gl.domElement);\n\n            eventControls.attachEvent('mouseOver', function () {\n                if (dragging === false)\n                    setDragging(true);\n                if (hovered === false)\n                    setHover(true);\n            })\n\n            eventControls.attachEvent('onclick', function (event) {\n\n                if (event.altKey)\n                    model.current.material = tileGridMat(fragmentShader, vertexShader)\n            })\n\n            eventControls.attachEvent('mouseOut', function () {\n                setDragging(false);\n                setHover(false);\n            })\n\n            eventControls.attachEvent('mouseUp', function () {\n                mesh.current.material.opacity = 1;\n                model.current.material = tileMat\n\n                setHover(true);\n            })\n\n            eventControls.attachEvent('dragAndDrop', function (altUsed) {\n                // If alt is being used, snap to the grid\n                if (altUsed) {\n                    // Switch to the tile grid shader if it hasn't already\n                    if (model.current.material === tileMat)\n                        model.current.material = tileGridMat(fragmentShader, vertexShader)\n\n                    this.focused.position.x = 11.855 * Math.round((this.focused.position.x) / 11.855);\n                    this.focused.position.z = 11.855 * Math.round((this.focused.position.z) / 11.855);\n                } else {\n                    // Update marker position to wherever the mouse pointer is currently located\n                    this.focused.position.y = this.previous.y;\n                }\n            });\n\n            eventControls.attach(mesh.current);\n\n            eventControls.map = model.current;\n        }\n\n\n\n\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [index, setSelect, store, camera, gl.domElement, setDragging, model])\n\n    useEffect(() => {\n        setNodeState(state => {\n            if (mesh.current !== null) {\n                state.nodes[index].position = mesh.current.position;\n\n                state.nodes[index].name = name;\n            }\n        })\n    }, [index, setNodeState, name])\n\n    function getMeshPos() {\n        const currentPos = mesh.current.position;\n\n        return [currentPos.x, currentPos.y, currentPos.z];\n    }\n\n    function getBillboardPos() {\n        let meshPos = getMeshPos();\n\n        return [meshPos[0], meshPos[1] + 2.5, meshPos[2]];\n    }\n\n    set({ position: mesh.current === null ? [-1, -1, -1] : getMeshPos() })\n\n    return (\n        <>\n            <Billboard\n                ref={billboard}\n                position={mesh.current !== null ? getBillboardPos() : [0, 1, 0]}\n                follow={true}\n                args={[0, 0]}\n            >\n                <Text\n                    color=\"#ededed\"\n                    fontSize={1.5}\n                    maxWidth={60}\n                    lineHeight={1}\n                    outlineBlur={\"15%\"}\n                    outlineColor={\"#000000\"}\n                    textAlign=\"left\"\n                    anchorX=\"center\"\n                    anchorY=\"middle\">\n                    {name}\n                </Text>\n            </Billboard>\n\n            <mesh\n                position={node.position}\n                ref={mesh}\n                scale={1}\n                onClick={(_event) => { setSelect([index, store]); }}\n            >\n                <cylinderGeometry args={[1, 1, 1]} />\n\n                <meshStandardMaterial metalness={0.5} transparent={true} opacity={1} color={selected ? 'green' : hovered ? 'yellow' : 'blue'} />\n            </mesh>\n        </>\n    )\n}","export class CubicHermiteSpline {\n    constructor(points, tangents) {\n        this.points = points;\n        this.tangents = tangents;\n    }\n\n    getPoints(count) {\n        const interpolatedPoints = [];\n\n        const increment = (1 / count);\n\n        for (let i = 0; i < 1; i += increment) {\n            interpolatedPoints.push(this.getPointAtTime(i));\n        }\n\n        return interpolatedPoints;\n    }\n\n    getPointAtTime(t) {\n        const points = this.points;\n        const tangents = this.tangents;\n\n        const tanForce = 3;\n\n        const p0 = points[0];\n        const p1 = points[1];\n\n        const v0 = tangents[0];\n        const v1 = tangents[1];\n\n        const t2 = t * t;\n        const t3 = t2 * t;\n        const _2t3 = 2.0 * t3;\n        const _3t2 = 3.0 * t2;\n\n        const a = _2t3 - _3t2 + 1.0;\n        const b = -_2t3 + _3t2;\n        const c = t3 - 2.0 * t2 + t;\n        const d = t3 - t2;\n\n        const x = p0[0] * a + (p1[0] * b + tanForce * ((v0[0] - p0[0]) * c + (p1[0] - v1[0]) * d));\n        const y = p0[1] * a + (p1[1] * b + tanForce * ((v0[1] - p0[1]) * c + (p1[1] - v1[1]) * d));\n\n        // const n = points.length; // number or points / tangents / knots\n        // const d = points[0].length; // vector dimensionality\n        // const v = new Array(d); // destination vector\n\n        // t = t * (n - 1); // rescale t to [0, n-1]\n        // const i0 = t | 0; // truncate\n        // let i1 = i0 + 1;\n\n        // if (i0 > n - 1) throw new Error('out of bounds');\n        // if (i0 === n - 1) i1 = i0;\n\n        // const scale = i1 - i0;\n\n        // t = (t - i0) / scale;\n\n        // const t2 = t * t;\n        // const it = 1 - t;\n        // const it2 = it * it;\n        // const tt = 2 * t;\n        // const h00 = (1 + tt) * it2;\n        // const h10 = t * it2;\n        // const h01 = t2 * (3 - tt);\n        // const h11 = t2 * (t - 1);\n\n        // for (var i = 0; i < d; i++) {\n        //     v[i] = h00 * points[i0][i] +\n        //         h10 * tangents[i0][i] * scale +\n        //         h01 * points[i1][i] +\n        //         h11 * tangents[i1][i] * scale;\n        // }\n\n        return [x, y];\n\n        // return v;\n    }\n\n}","import { useThree } from '@react-three/fiber';\nimport { useEffect } from 'react';\nimport { useRef } from 'react';\nimport { useState } from 'react';\nimport * as THREE from 'three'\nimport { EventsControls } from '../controls/EventsControls';\nimport * as S from \"../models/shaders\";\n\nimport * as M from '../models/materials'\nimport { CubicHermiteSpline } from '../lib/CubicHermiteSpline';\n\nexport default function NodeConnection({ dragging, setDragging, model, startMarker, endMarker }) {\n\n\n    const startPos = startMarker.position;\n    const endPos = endMarker.position;\n\n    const [vectors, setVectors] = useState([new THREE.Vector2(20, 0), new THREE.Vector2(0, 0)]);\n\n    const vertexShader = S.gridTileVertex;\n    const fragmentShader = S.gridTileFragment;\n\n    const { gl, camera } = useThree();\n\n    const v0Mesh = useRef(null);\n    const v1Mesh = useRef(null);\n\n    // Because a callback can't access an updated state value, use a ref\n    const vectorRef = useRef();\n\n    vectorRef.current = vectors;\n\n    const position = new THREE.Vector3();\n\n    // Calculate the midpoint of the vectors\n    position.subVectors(endPos, startPos).divideScalar(2).add(startPos);\n\n    const [hovered, setHover] = useState(false)\n\n    // Add a bit of y-offset to avoid clipping the floor\n    position.add(new THREE.Vector3(0, 0.01, 0));\n\n    const velocityScalarFunc = (val) => val * 1;\n\n    const curve = new CubicHermiteSpline([[startPos.x, startPos.z], [endPos.x, endPos.z]], [[velocityScalarFunc(vectors[0].x), velocityScalarFunc(vectors[0].y)], [velocityScalarFunc(vectors[1].x), velocityScalarFunc(vectors[1].y)]]);\n\n    useEffect(() => {\n        if (v0Mesh.current !== null && v1Mesh.current !== null && model !== null) {\n            const eventControls = new EventsControls(camera, gl.domElement);\n\n            eventControls.attachEvent('mouseOver', function () {\n                if (dragging === false)\n                    setDragging(true);\n                if (hovered === false)\n                    setHover(true);\n            })\n\n            eventControls.attachEvent('onclick', function (event) {\n\n                if (event.altKey)\n                    model.current.material = M.tileGridMat(fragmentShader, vertexShader)\n            })\n\n            eventControls.attachEvent('mouseOut', function () {\n                setHover(false);\n                setDragging(false);\n            })\n\n            eventControls.attachEvent('mouseUp', function () {\n                this.focused.material.opacity = 1;\n                model.current.material = M.tileMat\n\n                setHover(true);\n            })\n\n            eventControls.attachEvent('dragAndDrop', function (altUsed) {\n                // If alt is being used, snap to the grid\n                if (altUsed) {\n                    // Switch to the tile grid shader if it hasn't already\n                    if (model.current.material === M.tileMat)\n                        model.current.material = M.tileGridMat(fragmentShader, vertexShader)\n\n                    this.focused.position.x = 11.855 * Math.round((this.focused.position.x) / 11.855);\n                    this.focused.position.z = 11.855 * Math.round((this.focused.position.z) / 11.855);\n                } else {\n                    // Update marker position to wherever the mouse pointer is currently located\n                    // this.focused.position.y = this.previous.y;\n                }\n\n                if (this.focused.name === \"v0\") {\n\n                    setVectors([new THREE.Vector2(this.focused.position.x, this.focused.position.z), vectorRef.current[1]]);\n                } else {\n                    setVectors([vectorRef.current[0], new THREE.Vector2(this.focused.position.x, this.focused.position.z)]);\n                }\n                // }\n\n\n            });\n\n            eventControls.attach(v0Mesh.current);\n            eventControls.attach(v1Mesh.current);\n\n            eventControls.map = model.current;\n        }\n\n\n\n\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [camera, gl.domElement, model, dragging, setDragging])\n    let points = curve.getPoints(400);\n\n    // const colors = [];\n\n    // const color = new THREE.Color();\n\n    // const n = 25;\n\n    // for (let i = 0; i < n; i++) {\n    //     color.setRGB(i / 50, i / 50, i / 50);\n\n    //     colors.push(color.r, color.g, color.b);\n    // }\n\n    const geometry = new THREE.BufferGeometry().setFromPoints(points.map((v, i) => new THREE.Vector2(v[0], v[1])));\n\n    // const robotGeometry = new THREE.BufferGeometry().setFromPoints(points.map((v, i) => new THREE.Vector2(v[0] * 1.5, v[1] * 1.5)));\n\n\n    const v0Geometry = new THREE.BufferGeometry().setFromPoints([startPos, new THREE.Vector3(vectors[0].x, 0, vectors[0].y)]);\n    const v1Geometry = new THREE.BufferGeometry().setFromPoints([endPos, new THREE.Vector3(vectors[1].x, 0, vectors[1].y)]);\n\n    const straightLineGeometry = new THREE.BufferGeometry().setFromPoints([new THREE.Vector2(-5, 0.1), new THREE.Vector2(5, 0.1), new THREE.Vector2(5, 6.5), new THREE.Vector2(-5, 6.5), new THREE.Vector2(-5, 0.1)]);\n\n    // geometry.setAttribute('color', new THREE.Float32BufferAttribute(colors, 3));\n\n    return (\n        <>\n\n            <mesh name={\"v0\"} ref={v0Mesh} position={[vectors[0].x, 0, vectors[0].y]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshStandardMaterial color={\"red\"} />\n            </mesh>\n\n            <mesh name={\"v1\"} ref={v1Mesh} position={[vectors[1].x, 0, vectors[1].y]}>\n                <boxGeometry args={[1, 1, 1]} />\n                <meshStandardMaterial color={\"green\"} />\n            </mesh>\n\n\n            <line position={[0, 0.1, 0]} rotation={[Math.PI / 2, 0, 0]} geometry={geometry} />\n            {points.slice(0, -1).filter((_element, index) => index % 16 === 0).map((v, i) => {\n                return (\n                    <>\n                        <line key={\"straightline\" + i} position={[v[0], 0.1, v[1]]} geometry={straightLineGeometry} rotation={[0, Math.atan2(v[0] - points[i + 1][0], v[1] - points[i + 1][1]), 0]}>\n                            <lineBasicMaterial color={\"red\"} />\n                            {/* <boxGeometry args={[10, 0.01, 0.11]}/>\n                        <meshStandardMaterial color={\"red\"} opacity={0.2} transparent={true}/> */}\n                        </line>\n                    </>\n                )\n            })}\n            {/* <line position={[0, 0.1, 0]} rotation={[Math.PI / 2, 0, 0]} geometry={robotGeometry} /> */}\n            {/* <line position={[0, 0.1, -3]} rotation={[Math.PI / 2, 0, 0]} geometry={geometry} /> */}\n\n            <line position={[0, 0.1, 0]} geometry={v0Geometry}>\n                <lineBasicMaterial color={\"yellow\"} />\n            </line>\n\n            <line position={[0, 0.1, 0]} geometry={v1Geometry}>\n                <lineBasicMaterial color={\"yellow\"} />\n            </line>\n\n            {/* {points.map((v, i) => {\n                return <mesh position={[v.x, 0, v.y]}><boxGeometry args={[0.3, 0.3, 0.3]} /><meshStandardMaterial /></mesh>\n            })} */}\n            {/* <mesh position={startPos}>\n                <boxGeometry args={[1, 1, 1]}/>\n                <meshStandardMaterial color={\"red\"}/>\n            </mesh> */}\n            {/* <mesh\n                rotation={[Math.PI / 2, 0, -m]} // Rotation is in radians, X is rotated to be aligned with the field\n                position={startPos}\n                geometry={getGeometry()}\n            // material={this.getMaterial()}\n            // color={selected ? 'green' : hovered ? 'yellow' : 'blue'}\n            // onClick={(event) => this.onClick(event)}\n            // onPointerOver={(_event) => this.setState(() => ({ selected: this.state.selected, hovered: true }))}\n            // onPointerOut={(_event) => this.setState(() => ({ selected: this.state.selected, hovered: false }))}\n            >\n                <meshStandardMaterial metalness={0.5} transparent={true} opacity={1} color={props.color} />\n\n            </mesh> */}\n\n\n        </>)\n}","import React from \"react\";\nimport { OrbitControls, Stats } from \"@react-three/drei\"\nimport Node from \"./Node\"\nimport { useNodeStore } from \"../stores/NodeStore\";\nimport { useState } from \"react\";\nimport shallow from 'zustand/shallow'\nimport { button, useControls } from \"leva\";\nimport { useModelStore } from \"../stores/ModelStore\";\nimport { useUiLevaStore } from \"../stores/UILevaStore\";\nimport { useEffect } from \"react\";\nimport NodeConnection from \"./NodeConnection\";\n\nexport default function UIManager() {\n\n    const nodes = useNodeStore(state => state.nodes);\n    const model = useModelStore(state => state.model);\n\n    const { setMarkerMode, setUiStore } = useUiLevaStore(state => ({ setMarkerMode: state.setMarkerMode, setUiStore: state.setStore }), shallow);\n\n    const [dragging, setDragging] = useState(false);\n\n    useControls(\n        {\n            \"Remove All Markers\": button(() => { })\n        }\n    )\n\n    const [[selection, store], setSelection] = React.useState([-1, null]);\n\n    useEffect(() => {\n        setUiStore(store);\n    }, [store, setMarkerMode, setUiStore])\n\n    return <>\n        {(nodes.map((v, i) => (\n            <Node\n                key={i}\n                node={v}\n                selected={selection !== null ? selection === i : false}\n                setSelect={setSelection}\n                dragging={dragging}\n                setDragging={setDragging}\n                model={model}\n                index={i}\n            />\n        )))}\n        {(nodes.slice(0, -1).map((v, i) => {\n            return <NodeConnection model={model} dragging={dragging} setDragging={setDragging} startMarker={v} endMarker={nodes[i + 1]}/>\n        }))}\n\n\n        {<OrbitControls enabled={!dragging} />}\n        <Stats/>\n\n        {/* <Line color={\"red\"} lineWidth={10}  points={[[0, 20, 0], [10, 20, 0]]}/> */}\n    </>\n\n}","import { useRef, useState } from \"react\";\nimport { button, Leva, LevaPanel, useControls } from \"leva\";\nimport { useUiLevaStore } from \"../stores/UILevaStore\";\nimport * as THREE from \"three\";\nimport { useNodeStore } from \"../stores/NodeStore\";\n\n\nexport default function UI() {\n    const importButton = useRef();\n    const waypointButton = useRef();\n\n    const nodes = useNodeStore(state => state.nodes);\n    const addNode = useNodeStore(state => state.addNode);\n\n    const store = useUiLevaStore(state => state.currentNodeStore)\n    const toggleFieldElements = useUiLevaStore(state => state.toggleFieldElements);\n\n    const toggleMarkerMode = useUiLevaStore(state => state.toggleMarkerMode);\n\n    const [buttonSelected, setButtonSelected] = useState(false);\n\n    const {importString} = useControls(\n        {\n            hideGameElements: {\n                value: false,\n                onChange: () => { toggleFieldElements(); }\n            },\n            importString: \"Import String Goes Here\"\n        }\n    )\n\n    let importProject = (importString) => {\n        const parsedNodes = JSON.parse(importString);\n\n        for (const index in parsedNodes) {\n            // Change serialized position to be a THREE.Vector3\n            let node = parsedNodes[index];\n\n            node.position = new THREE.Vector3(node.position.x, node.position.y, node.position.z);\n\n            addNode(parsedNodes[index]);\n        }\n    }\n    \n\n    let exportProject = () => {\n        console.log(JSON.stringify(nodes));\n        return JSON.stringify(nodes);\n    }\n\n    return (\n        <div style={{ position: \"absolute\", right: \"1em\", top: \"1em\" }} className=\"panel\">\n            <div className={\"leva-c-kWgxhW leva-c-kWgxhW-bSMcqW-fill-true leva-c-kWgxhW-nNfbl-hideTitleBar-true\"}>\n                <div className={\"leva-c-hBtFDW\"}>\n                    <div className={\"leva-c-dmsJDs leva-c-dmsJDs-lpvxwm-toggled-true leva-c-dmsJDs-hXSjjU-isRoot-true\"}>\n                        <div className={\"leva-c-bduird\"}>\n                            <button\n                                ref={importButton}\n                                onClick={() => { importProject(importString) }}\n                                style={{ color: \"#ededed\", backgroundColor: (\"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{\"Import Project\"}\n                            </button>\n                            <button\n                                ref={importButton}\n                                onClick={() => { exportProject() }}\n                                style={{ color: \"#ededed\", backgroundColor: (\"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{\"Export Project\"}\n                            </button>\n                            <div /><div /><div />\n                            <button\n                                ref={waypointButton}\n                                onClick={() => { setButtonSelected(!buttonSelected); toggleMarkerMode(); }}\n                                style={{ color: \"#ededed\", backgroundColor: (buttonSelected ? \"#ff003c\" : \"#007bff\") }}\n                                className={\"leva-c-fOioiK\"}>{buttonSelected ? \"Exit Waypoint Creation\" : \"Enter Waypoint Creation\"}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <LevaPanel store={store} fill flat titleBar={false} />\n            <Leva fill flat titleBar={false} style={{ position: \"absolute\" }} />\n\n        </div>\n    )\n}","import * as THREE from 'three'\nimport React, { useRef, Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport Model from \"./models/FieldModel\"\nimport { Box } from '@react-three/drei'\nimport './App.css'\nimport NUIManagerRenderer from './ui/UIManager'\nimport UI from './ui/UI'\n\nfunction intersectionsFilter(intersections: THREE.Intersection[]) {\n  return intersections?.length ? [intersections[0]] : intersections\n}\n\nexport default function App() {\n  const uiRef = useRef();\n  const ui = uiRef.current;\n\n  const [tiles, setTiles] = React.useState<THREE.Mesh[] | null>(null!)\n  // const [uiRenderer, setUiRenderer] = React.useState<NUIManagerRenderer | null>(null);\n\n  const camera = useRef<THREE.PerspectiveCamera>(null!);\n\n  const sphereGeometry = new THREE.SphereGeometry(500, 60, 40);\n\n  // Invert the geometry for the textures to face inwards\n  sphereGeometry.scale(-1, 1, 1);\n\n  const backgroundTexture = new THREE.TextureLoader().load(process.env.PUBLIC_URL + \"/background.jpg\");\n\n  const sphereMaterial = new THREE.MeshBasicMaterial({\n    map: backgroundTexture\n  })\n\n  return (\n    <>\n      <UI/>\n      <Canvas\n        shadows={true}\n        raycaster={{ filter: intersectionsFilter }}\n        gl={{ shadowMapEnabled: true, shadowMapType: THREE.PCFShadowMap, antialias: true, pixelRatio: window.devicePixelRatio }}\n        camera={{ ref: camera, fov: 75, position: [0, 100, 100] }}>\n\n        <NUIManagerRenderer/>\n\n        <ambientLight intensity={0.25} />\n        <directionalLight\n          position={[200, 200, -100]}\n          shadow-mapSize-width={4096}\n          shadow-mapSize-height={4096}\n          intensity={0.65}\n          shadow-camera-left={-100}\n          shadow-camera-right={100}\n          shadow-camera-top={80}\n          shadow-camera-bottom={-80}\n          castShadow={true}\n        />\n\n        <mesh geometry={sphereGeometry} material={sphereMaterial} />\n        <Box position={[100, 200, 0]} args={[1, 1, 1]} />\n\n        <Suspense fallback={null}>\n          <Model ui={ui} tiles={tiles} setTiles={setTiles} />\n        </Suspense>\n\n      </Canvas>\n    </>\n  )\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}